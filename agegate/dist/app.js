!function(){(window.views=window.views||{}).overlay=function(){return'\x3c!-- Age Gate --\x3e<div id="age-gate-wrapper">  <div id="age-gate">    <div class="logo"></div>    <div class="border_wrap">      <form name="age-gate-form" id="age-gate-form" class="age-form">        <input type="hidden" name="requiredAge" id="requiredAge" value="21">        <h4>Please enter your age to continue</h4>        <table>          <tr>            <td class="td-day"><input type="tel" class="form-input" name="day" id="day" maxlength="2" placeholder="DD"></td>            <td class="td-divider"><span class="divider">/</span></td>            <td class="td-month"><input type="tel" class="form-input" name="month" id="month" maxlength="2" placeholder="MM"></td>            <td class="td-divider"><span class="divider">/</span></td>            <td class="td-year"><input type="tel" class="form-input" name="year" id="year" maxlength="4" placeholder="YYYY"></td>          </tr>        </table>        <input type="submit" name="submit" class="btn" id="submit" value="I Agree">        <div class="error hidden"></div>      </form>    </div>  </div></div>'}}(),$1(window).ready(function(){new AgeGate});var AgeGate=function(){this.stage=document.body,this.one=$1(),document.body.style.margin=0,document.body.style.padding=0,this.one.Platform.BeOn.hideInfoBar(),this.one.Platform.BeOn.hidePoster(),this.one.Platform.BeOn.layout({height:"100%"}),this.renderView("overlay"),this.attachEvents()};AgeGate.prototype.renderView=function(e){var t=window.views[e]();this.stage.innerHTML+=t},AgeGate.prototype.attachEvents=function(e){function t(){var e=s[0].value,t=s[1].value,a=s[2].value;if(!n(e+"/"+t+"/"+a))return"Please enter a valid age";var r=new Date,i=new Date(a,t,e),d=new Date(r-i);return!((d=d/1e3/60/60/24/365)<18)||"You're not old enough to view"}function n(e){if(!/^\d{1,2}\/\d{1,2}\/\d{4}$/.test(e))return!1;var t=e.split("/"),n=parseInt(t[1],10),a=parseInt(t[0],10),r=parseInt(t[2],10);if(r<1e3||r>3e3||0==a||a>12)return!1;var i=[31,28,31,30,31,30,31,31,30,31,30,31];return(r%400==0||r%100!=0&&r%4==0)&&(i[1]=29),n>0&&n<=i[a-1]}for(var a=this,r=document.getElementById("age-gate-wrapper"),i=document.getElementsByClassName("age-form")[0],s=i.getElementsByClassName("form-input"),d=document.getElementById("submit"),o=document.getElementsByClassName("error")[0],l=0;l<s.length;l++)!function(e){s[e].onkeyup=function(t){if(event.keyCode>=48&&event.keyCode<=57);else if(event.keyCode>=65&&event.keyCode<=90);else if(!(event.keyCode>=97&&event.keyCode<=122))return;this.value.length==this.maxLength&&(e+1==s.length?d.focus():s[e+1].focus())}}(l);d.addEventListener("click",function(e){e.preventDefault();var n=t();"string"==typeof n?(o.className="error visible",o.innerHTML="<p>"+n+"</p>"):(o.innerHTML="",r.className="passed",o.className="error",a.one.Platform.BeOn.play(),a.one.Platform.BeOn.showPoster())})};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
