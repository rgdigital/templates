!function(){(window.views=window.views||{}).overlay=function(){return'\x3c!-- Age Gate --\x3e<div id="age-gate-wrapper">  <div id="age-gate">    <div class="border_wrap">      <form name="age-gate-form" id="age-gate-form" class="age-form">        <input type="hidden" name="requiredAge" id="requiredAge" value="21">        <h4>Please enter your age to continue</h4>        <table>          <tr>            <td class="td-day"><input type="tel" class="form-input" name="day" id="day" maxlength="2" placeholder="DD"></td>            <td class="td-divider"><span class="divider">/</span></td>            <td class="td-month"><input type="tel" class="form-input" name="month" id="month" maxlength="2" placeholder="MM"></td>            <td class="td-divider"><span class="divider">/</span></td>            <td class="td-year"><input type="tel" class="form-input" name="year" id="year" maxlength="4" placeholder="YYYY"></td>          </tr>        </table>        <input type="submit" name="submit" class="btn" id="submit" value="I Agree">        <div class="error hidden"></div>      </form>    </div>  </div></div>'}}(),$1(window).ready(function(){new AgeGate});var AgeGate=function(){this.stage=document.body,this.one=$1(),document.body.style.margin=0,document.body.style.padding=0,this.one.Platform.BeOn.hideInfoBar(),this.one.Platform.BeOn.hidePoster(),this.one.Platform.BeOn.layout({height:"100%"}),this.renderView("overlay"),this.attachEvents()};AgeGate.prototype.renderView=function(e){var t=window.views[e]();this.stage.innerHTML+=t},AgeGate.prototype.attachEvents=function(e){function t(){var e=s[0].value,t=s[1].value,a=s[2].value;if(!n(e+"/"+t+"/"+a))return"Please enter a valid age";var r=new Date,i=new Date(a,t,e),d=new Date(r-i);return!((d=d/1e3/60/60/24/365)<18)||"You're not old enough to view"}function n(e){if(!/^\d{1,2}\/\d{1,2}\/\d{4}$/.test(e))return!1;var t=e.split("/"),n=parseInt(t[1],10),a=parseInt(t[0],10),r=parseInt(t[2],10);if(r<1e3||r>3e3||0==a||a>12)return!1;var i=[31,28,31,30,31,30,31,31,30,31,30,31];return(r%400==0||r%100!=0&&r%4==0)&&(i[1]=29),n>0&&n<=i[a-1]}for(var a=this,r=document.getElementById("age-gate-wrapper"),i=document.getElementsByClassName("age-form")[0],s=i.getElementsByClassName("form-input"),d=document.getElementById("submit"),o=document.getElementsByClassName("error")[0],l=0;l<s.length;l++)!function(e){s[e].onkeyup=function(t){if(event.keyCode>=48&&event.keyCode<=57);else if(event.keyCode>=65&&event.keyCode<=90);else if(!(event.keyCode>=97&&event.keyCode<=122))return;this.value.length==this.maxLength&&(e+1==s.length?d.focus():s[e+1].focus())}}(l);d.addEventListener("click",function(e){e.preventDefault();var n=t();"string"==typeof n?(o.className="error visible",o.innerHTML="<p>"+n+"</p>"):(o.innerHTML="",r.className="passed",o.className="error",a.one.Platform.BeOn.play(),a.one.Platform.BeOn.showPoster())})};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZpZXdzLmpzIiwiYXBwLmpzIl0sIm5hbWVzIjpbIndpbmRvdyIsIiQxIiwicmVhZHkiLCJBZ2VHYXRlIiwidGhpcyIsInN0YWdlIiwiZG9jdW1lbnQiLCJib2R5Iiwib25lIiwic3R5bGUiLCJtYXJnaW4iLCJwYWRkaW5nIiwiUGxhdGZvcm0iLCJCZU9uIiwiaGlkZUluZm9CYXIiLCJoaWRlUG9zdGVyIiwibGF5b3V0IiwiaGVpZ2h0IiwicmVuZGVyVmlldyIsImF0dGFjaEV2ZW50cyIsInByb3RvdHlwZSIsIm5hbWUiLCJ2aWV3Iiwidmlld3MiLCJpbm5lckhUTUwiLCJ2YWxpZGF0ZSIsImRheSIsImlucHV0cyIsInZhbHVlIiwibW9udGgiLCJ5ZWFyIiwiaXNWYWxpZERhdGUiLCJ0b2RheSIsIkRhdGUiLCJiaXJ0aGRheSIsImFnZSIsImRhdGVTdHJpbmciLCJ0ZXN0IiwicGFydHMiLCJzcGxpdCIsInBhcnNlSW50IiwibW9udGhMZW5ndGgiLCJfdGhpcyIsIndyYXBwZXIiLCJnZXRFbGVtZW50QnlJZCIsImNvbnRhaW5lciIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJzdWJtaXQiLCJlcnJvciIsImkiLCJsZW5ndGgiLCJvbmtleXVwIiwiZSIsImV2ZW50Iiwia2V5Q29kZSIsIm1heExlbmd0aCIsImZvY3VzIiwiYWRkRXZlbnRMaXN0ZW5lciIsInByZXZlbnREZWZhdWx0IiwidmFsaWQiLCJjbGFzc05hbWUiLCJwbGF5Iiwic2hvd1Bvc3RlciJdLCJtYXBwaW5ncyI6IkNBQUEsWUFBQUEsT0FBQSxNQUFBQSxPQUFBLFdBQUEsUUFBQSxXQUFBLE1BQUEscWhDQUFBQyxHQUFBRCxRQUFBRSxNQUFBLFdDSUEsR0FBQUMsVUFLQSxJQUFBQSxTQUFBLFdBR0FDLEtBQUFDLE1BQUFDLFNBQUFDLEtBRUFILEtBQUFJLElBQUFQLEtBR0FLLFNBQUFDLEtBQUFFLE1BQUFDLE9BQUEsRUFDQUosU0FBQUMsS0FBQUUsTUFBQUUsUUFBQSxFQUdBUCxLQUFBSSxJQUFBSSxTQUFBQyxLQUFBQyxjQUNBVixLQUFBSSxJQUFBSSxTQUFBQyxLQUFBRSxhQUlBWCxLQUFBSSxJQUFBSSxTQUFBQyxLQUFBRyxRQUNBQyxPQUFBLFNBSUFiLEtBQUFjLFdBQUEsV0FFQWQsS0FBQWUsZUFJQWhCLFNBQUFpQixVQUFBRixXQUFBLFNBQUFHLEdBQ0EsR0FBQUMsR0FBQXRCLE9BQUF1QixNQUFBRixJQUNBakIsTUFBQUMsTUFBQW1CLFdBQUFGLEdBR0FuQixRQUFBaUIsVUFBQUQsYUFBQSxTQUFBRSxHQStCQSxRQUFBSSxLQUNBLEdBRUFDLEdBQUFDLEVBQUEsR0FBQUMsTUFDQUMsRUFBQUYsRUFBQSxHQUFBQyxNQUNBRSxFQUFBSCxFQUFBLEdBQUFDLEtBSUEsS0FGQUcsRUFEQUwsRUFBQSxJQUFBRyxFQUFBLElBQUFDLEdBSUEsTUFBQSwwQkFHQSxJQUFBRSxHQUFBLEdBQUFDLE1BQ0FDLEVBQUEsR0FBQUQsTUFBQUgsRUFBQUQsRUFBQUgsR0FDQVMsRUFBQSxHQUFBRixNQUFBRCxFQUFBRSxFQUdBLFVBRkFDLEVBQUFBLEVBQUEsSUFBQSxHQUFBLEdBQUEsR0FBQSxLQWZBLEtBa0JBLGdDQU1BLFFBQUFKLEdBQUFLLEdBSUEsSUFBQSw0QkFBQUMsS0FBQUQsR0FDQSxPQUFBLENBRUEsSUFBQUUsR0FBQUYsRUFBQUcsTUFBQSxLQUNBYixFQUFBYyxTQUFBRixFQUFBLEdBQUEsSUFDQVQsRUFBQVcsU0FBQUYsRUFBQSxHQUFBLElBQ0FSLEVBQUFVLFNBQUFGLEVBQUEsR0FBQSxHQUVBLElBQUFSLEVBQUEsS0FBQUEsRUFBQSxLQUFBLEdBQUFELEdBQUFBLEVBQUEsR0FDQSxPQUFBLENBQ0EsSUFBQVksSUFBQSxHQUFBLEdBQUEsR0FBQSxHQUFBLEdBQUEsR0FBQSxHQUFBLEdBQUEsR0FBQSxHQUFBLEdBQUEsR0FLQSxRQUhBWCxFQUFBLEtBQUEsR0FBQUEsRUFBQSxLQUFBLEdBQUFBLEVBQUEsR0FBQSxLQUNBVyxFQUFBLEdBQUEsSUFFQWYsRUFBQSxHQUFBQSxHQUFBZSxFQUFBWixFQUFBLEdBSUEsSUFBQSxHQTlFQWEsR0FBQXRDLEtBRUF1QyxFQUFBckMsU0FBQXNDLGVBQUEsb0JBQ0FDLEVBQUF2QyxTQUFBd0MsdUJBQUEsWUFBQSxHQUNBbkIsRUFBQWtCLEVBQUFDLHVCQUFBLGNBQ0FDLEVBQUF6QyxTQUFBc0MsZUFBQSxVQUNBSSxFQUFBMUMsU0FBQXdDLHVCQUFBLFNBQUEsR0F3RUFHLEVBQUEsRUFBQUEsRUFBQXRCLEVBQUF1QixPQUFBRCxLQXRFQSxTQUFBQSxHQUNBdEIsRUFBQXNCLEdBQUFFLFFBQUEsU0FBQUMsR0FFQSxHQUFBQyxNQUFBQyxTQUFBLElBQUFELE1BQUFDLFNBQUEsUUFFQSxJQUFBRCxNQUFBQyxTQUFBLElBQUFELE1BQUFDLFNBQUEsUUFFQSxNQUFBRCxNQUFBQyxTQUFBLElBQUFELE1BQUFDLFNBQUEsS0FHQSxNQUVBbEQsTUFBQXdCLE1BQUFzQixRQUFBOUMsS0FBQW1ELFlBQ0FOLEVBQUEsR0FBQXRCLEVBQUF1QixPQUVBSCxFQUFBUyxRQUVBN0IsRUFBQXNCLEVBQUEsR0FBQU8sV0FzREFQLEVBR0FGLEdBQUFVLGlCQUFBLFFBQUEsU0FBQUwsR0FDQUEsRUFBQU0sZ0JBQ0EsSUFBQUMsR0FBQWxDLEdBQ0EsaUJBQUFrQyxJQUNBWCxFQUFBWSxVQUFBLGdCQUNBWixFQUFBeEIsVUFBQSxNQUFBbUMsRUFBQSxTQUVBWCxFQUFBeEIsVUFBQSxHQUNBbUIsRUFBQWlCLFVBQUEsU0FDQVosRUFBQVksVUFBQSxRQUNBbEIsRUFBQWxDLElBQUFJLFNBQUFDLEtBQUFnRCxPQUNBbkIsRUFBQWxDLElBQUFJLFNBQUFDLEtBQUFpRCIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKSB7KHdpbmRvd1tcInZpZXdzXCJdID0gd2luZG93W1widmlld3NcIl0gfHwge30pW1wib3ZlcmxheVwiXSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gXCI8IS0tIEFnZSBHYXRlIC0tPjxkaXYgaWQ9XFxcImFnZS1nYXRlLXdyYXBwZXJcXFwiPiAgPGRpdiBpZD1cXFwiYWdlLWdhdGVcXFwiPiAgICA8ZGl2IGNsYXNzPVxcXCJib3JkZXJfd3JhcFxcXCI+ICAgICAgPGZvcm0gbmFtZT1cXFwiYWdlLWdhdGUtZm9ybVxcXCIgaWQ9XFxcImFnZS1nYXRlLWZvcm1cXFwiIGNsYXNzPVxcXCJhZ2UtZm9ybVxcXCI+ICAgICAgICA8aW5wdXQgdHlwZT1cXFwiaGlkZGVuXFxcIiBuYW1lPVxcXCJyZXF1aXJlZEFnZVxcXCIgaWQ9XFxcInJlcXVpcmVkQWdlXFxcIiB2YWx1ZT1cXFwiMjFcXFwiPiAgICAgICAgPGg0PlBsZWFzZSBlbnRlciB5b3VyIGFnZSB0byBjb250aW51ZTwvaDQ+ICAgICAgICA8dGFibGU+ICAgICAgICAgIDx0cj4gICAgICAgICAgICA8dGQgY2xhc3M9XFxcInRkLWRheVxcXCI+PGlucHV0IHR5cGU9XFxcInRlbFxcXCIgY2xhc3M9XFxcImZvcm0taW5wdXRcXFwiIG5hbWU9XFxcImRheVxcXCIgaWQ9XFxcImRheVxcXCIgbWF4bGVuZ3RoPVxcXCIyXFxcIiBwbGFjZWhvbGRlcj1cXFwiRERcXFwiPjwvdGQ+ICAgICAgICAgICAgPHRkIGNsYXNzPVxcXCJ0ZC1kaXZpZGVyXFxcIj48c3BhbiBjbGFzcz1cXFwiZGl2aWRlclxcXCI+Lzwvc3Bhbj48L3RkPiAgICAgICAgICAgIDx0ZCBjbGFzcz1cXFwidGQtbW9udGhcXFwiPjxpbnB1dCB0eXBlPVxcXCJ0ZWxcXFwiIGNsYXNzPVxcXCJmb3JtLWlucHV0XFxcIiBuYW1lPVxcXCJtb250aFxcXCIgaWQ9XFxcIm1vbnRoXFxcIiBtYXhsZW5ndGg9XFxcIjJcXFwiIHBsYWNlaG9sZGVyPVxcXCJNTVxcXCI+PC90ZD4gICAgICAgICAgICA8dGQgY2xhc3M9XFxcInRkLWRpdmlkZXJcXFwiPjxzcGFuIGNsYXNzPVxcXCJkaXZpZGVyXFxcIj4vPC9zcGFuPjwvdGQ+ICAgICAgICAgICAgPHRkIGNsYXNzPVxcXCJ0ZC15ZWFyXFxcIj48aW5wdXQgdHlwZT1cXFwidGVsXFxcIiBjbGFzcz1cXFwiZm9ybS1pbnB1dFxcXCIgbmFtZT1cXFwieWVhclxcXCIgaWQ9XFxcInllYXJcXFwiIG1heGxlbmd0aD1cXFwiNFxcXCIgcGxhY2Vob2xkZXI9XFxcIllZWVlcXFwiPjwvdGQ+ICAgICAgICAgIDwvdHI+ICAgICAgICA8L3RhYmxlPiAgICAgICAgPGlucHV0IHR5cGU9XFxcInN1Ym1pdFxcXCIgbmFtZT1cXFwic3VibWl0XFxcIiBjbGFzcz1cXFwiYnRuXFxcIiBpZD1cXFwic3VibWl0XFxcIiB2YWx1ZT1cXFwiSSBBZ3JlZVxcXCI+ICAgICAgICA8ZGl2IGNsYXNzPVxcXCJlcnJvciBoaWRkZW5cXFwiPjwvZGl2PiAgICAgIDwvZm9ybT4gICAgPC9kaXY+ICA8L2Rpdj48L2Rpdj5cIjt9O30pKCk7IiwiJDEod2luZG93KS5yZWFkeShmdW5jdGlvbigpIHtcblxuXG5cbiAgLy8gQ3JlYXRlIEFnZUdhdGVcbiAgbmV3IEFnZUdhdGUoKTtcblxufSk7XG5cbi8vIENvbnN0cnVjdG9yXG52YXIgQWdlR2F0ZSA9IGZ1bmN0aW9uKCkge1xuICBcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB0aGlzLnN0YWdlID0gZG9jdW1lbnQuYm9keTtcblxuICB0aGlzLm9uZSA9ICQxKCk7XG5cbiAgLy8gUmVzZXRcbiAgZG9jdW1lbnQuYm9keS5zdHlsZS5tYXJnaW4gPSAwO1xuICBkb2N1bWVudC5ib2R5LnN0eWxlLnBhZGRpbmcgPSAwO1xuXG4gIC8vIEhpZGUgaW5mbyBiYXJcbiAgdGhpcy5vbmUuUGxhdGZvcm0uQmVPbi5oaWRlSW5mb0JhcigpO1xuICB0aGlzLm9uZS5QbGF0Zm9ybS5CZU9uLmhpZGVQb3N0ZXIoKTtcbiAgLy8gdGhpcy5vbmUuUGxhdGZvcm0uQmVPbi5oaWRlQ29udHJvbEJhcigpO1xuXG4gIC8vIExheW91dFxuICB0aGlzLm9uZS5QbGF0Zm9ybS5CZU9uLmxheW91dCh7XG4gICAgaGVpZ2h0IDogJzEwMCUnXG4gIH0pO1xuXG4gIC8vIFJlbmRlclxuICB0aGlzLnJlbmRlclZpZXcoJ292ZXJsYXknKTtcblxuICB0aGlzLmF0dGFjaEV2ZW50cygpO1xuXG59O1xuXG5BZ2VHYXRlLnByb3RvdHlwZS5yZW5kZXJWaWV3ID0gZnVuY3Rpb24obmFtZSkge1xuICB2YXIgdmlldyA9IHdpbmRvdy52aWV3c1tuYW1lXSgpO1xuICB0aGlzLnN0YWdlLmlubmVySFRNTCArPSB2aWV3O1xufVxuXG5BZ2VHYXRlLnByb3RvdHlwZS5hdHRhY2hFdmVudHMgPSBmdW5jdGlvbihuYW1lKSB7XG4gIHZhciBfdGhpcyA9IHRoaXM7XG4gIC8vIENvbnRhaW5lclxuICB2YXIgd3JhcHBlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhZ2UtZ2F0ZS13cmFwcGVyJyk7XG4gIHZhciBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiYWdlLWZvcm1cIilbMF07XG4gIHZhciBpbnB1dHMgPSBjb250YWluZXIuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnZm9ybS1pbnB1dCcpO1xuICB2YXIgc3VibWl0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N1Ym1pdCcpO1xuICB2YXIgZXJyb3IgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdlcnJvcicpWzBdO1xuICAvLyBLZXkgcHJlc3Nlc1xuICBmdW5jdGlvbiBrZXlEb3duRXZlbnQoaSkge1xuICAgIGlucHV0c1tpXS5vbmtleXVwID0gZnVuY3Rpb24oZSkge1xuICAgICAgLy8gUHJldmVudCBuZXh0IGZvY3VzIGZvciBhcnJvdyBrZXlzXG4gICAgICBpZiAoZXZlbnQua2V5Q29kZSA+PSA0OCAmJiBldmVudC5rZXlDb2RlIDw9IDU3KSB7XG4gICAgICAgICAgLy8gTnVtYmVyXG4gICAgICB9IGVsc2UgaWYgKGV2ZW50LmtleUNvZGUgPj0gNjUgJiYgZXZlbnQua2V5Q29kZSA8PSA5MCkge1xuICAgICAgICAgIC8vIEFscGhhYmV0IHVwcGVyIGNhc2VcbiAgICAgIH0gZWxzZSBpZiAoZXZlbnQua2V5Q29kZSA+PSA5NyAmJiBldmVudC5rZXlDb2RlIDw9IDEyMikge1xuICAgICAgICAgIC8vIEFscGhhYmV0IGxvd2VyIGNhc2VcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLnZhbHVlLmxlbmd0aCA9PSB0aGlzLm1heExlbmd0aCkge1xuICAgICAgICBpZiAoaSsxID09IGlucHV0cy5sZW5ndGgpIHtcbiAgICAgICAgICAvLyBGb2N1cyBvbiBzdWJtaXQgYnV0dG9uXG4gICAgICAgICAgc3VibWl0LmZvY3VzKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaW5wdXRzW2krMV0uZm9jdXMoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICBmdW5jdGlvbiB2YWxpZGF0ZSgpIHtcbiAgICB2YXIgYWdlTGltaXQgPSAxODtcblxuICAgIHZhciBkYXkgPSBpbnB1dHNbMF0udmFsdWU7XG4gICAgdmFyIG1vbnRoID0gaW5wdXRzWzFdLnZhbHVlO1xuICAgIHZhciB5ZWFyID0gaW5wdXRzWzJdLnZhbHVlO1xuICAgIHZhciBkYXRlID0gZGF5KycvJyttb250aCsnLycreWVhcjtcbiAgICB2YXIgdmFsaWQgPSBpc1ZhbGlkRGF0ZShkYXRlKTtcblxuICAgIGlmICghdmFsaWQpIHtcbiAgICAgIHJldHVybiAnUGxlYXNlIGVudGVyIGEgdmFsaWQgYWdlJztcbiAgICB9XG5cbiAgICB2YXIgdG9kYXkgICAgPSBuZXcgRGF0ZSgpOyBcbiAgICB2YXIgYmlydGhkYXkgPSBuZXcgRGF0ZSh5ZWFyLCBtb250aCwgZGF5KTtcbiAgICB2YXIgYWdlICAgICAgPSBuZXcgRGF0ZSh0b2RheSAtIGJpcnRoZGF5KTtcbiAgICAgICAgYWdlID0gYWdlLzEwMDAvNjAvNjAvMjQvMzY1O1xuXG4gICAgaWYgKGFnZSA8IGFnZUxpbWl0KSB7XG4gICAgICByZXR1cm4gJ1lvdVxcJ3JlIG5vdCBvbGQgZW5vdWdoIHRvIHZpZXcnO1xuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgZnVuY3Rpb24gaXNWYWxpZERhdGUoZGF0ZVN0cmluZylcbiAge1xuICAgIC8vIEZvcm1hdDogMDEvMDEvMjAwMFxuICAgIC8vIEZpcnN0IGNoZWNrIGZvciB0aGUgcGF0dGVyblxuICAgIGlmKCEvXlxcZHsxLDJ9XFwvXFxkezEsMn1cXC9cXGR7NH0kLy50ZXN0KGRhdGVTdHJpbmcpKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgLy8gUGFyc2UgdGhlIGRhdGUgcGFydHMgdG8gaW50ZWdlcnNcbiAgICB2YXIgcGFydHMgPSBkYXRlU3RyaW5nLnNwbGl0KFwiL1wiKTtcbiAgICB2YXIgZGF5ID0gcGFyc2VJbnQocGFydHNbMV0sIDEwKTtcbiAgICB2YXIgbW9udGggPSBwYXJzZUludChwYXJ0c1swXSwgMTApO1xuICAgIHZhciB5ZWFyID0gcGFyc2VJbnQocGFydHNbMl0sIDEwKTtcbiAgICAvLyBDaGVjayB0aGUgcmFuZ2VzIG9mIG1vbnRoIGFuZCB5ZWFyXG4gICAgaWYoeWVhciA8IDEwMDAgfHwgeWVhciA+IDMwMDAgfHwgbW9udGggPT0gMCB8fCBtb250aCA+IDEyKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgdmFyIG1vbnRoTGVuZ3RoID0gWyAzMSwgMjgsIDMxLCAzMCwgMzEsIDMwLCAzMSwgMzEsIDMwLCAzMSwgMzAsIDMxIF07XG4gICAgLy8gQWRqdXN0IGZvciBsZWFwIHllYXJzXG4gICAgaWYoeWVhciAlIDQwMCA9PSAwIHx8ICh5ZWFyICUgMTAwICE9IDAgJiYgeWVhciAlIDQgPT0gMCkpXG4gICAgICAgIG1vbnRoTGVuZ3RoWzFdID0gMjk7XG4gICAgLy8gQ2hlY2sgdGhlIHJhbmdlIG9mIHRoZSBkYXlcbiAgICByZXR1cm4gZGF5ID4gMCAmJiBkYXkgPD0gbW9udGhMZW5ndGhbbW9udGggLSAxXTtcbiAgfTtcblxuICAvLyBBZGQgZW0nXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgaW5wdXRzLmxlbmd0aDsgaSsrKSB7XG4gICAga2V5RG93bkV2ZW50KGkpO1xuICB9XG4gIC8vIFN1Ym1pdFxuICBzdWJtaXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHZhciB2YWxpZCA9IHZhbGlkYXRlKCk7XG4gICAgaWYgKHR5cGVvZiB2YWxpZCA9PSAnc3RyaW5nJykge1xuICAgICAgZXJyb3IuY2xhc3NOYW1lID0gJ2Vycm9yIHZpc2libGUnO1xuICAgICAgZXJyb3IuaW5uZXJIVE1MID0gJzxwPicrdmFsaWQrJzwvcD4nO1xuICAgIH0gZWxzZSB7XG4gICAgICBlcnJvci5pbm5lckhUTUwgPSAnJztcbiAgICAgIHdyYXBwZXIuY2xhc3NOYW1lID0gJ3Bhc3NlZCc7XG4gICAgICBlcnJvci5jbGFzc05hbWUgPSAnZXJyb3InO1xuICAgICAgX3RoaXMub25lLlBsYXRmb3JtLkJlT24ucGxheSgpO1xuICAgICAgX3RoaXMub25lLlBsYXRmb3JtLkJlT24uc2hvd1Bvc3RlcigpO1xuICAgIH1cbiAgfSlcbn0iXX0=
