!function(e){if(!e.preview){e.assetContainers.main.isExpandable=!0;try{var t=window.frameElement.parentNode.firstChild.firstChild.contentWindow;e.overrides=e.overrides||{},e.overrides.displayWindowTarget=t}catch(e){console.warn("Failed to find target iframe in player environment: Has the structure changed?")}}var n=!1;if(!e.overrides||e.overrides.displayWindowTarget!=self)for(var i in e.assetContainers)if(e.assetContainers.hasOwnProperty(i)){var a=e.assetContainers[i];if("inlineDiv"!=a.type||a.isExpandable){n=!0;break}}if(e.overrides&&e.overrides.displayWindowTarget){var o=e.overrides.displayWindowTarget;o="undefined"!=typeof adtechIframeHashArray&&self!=top?o.parent:o}else{for(var r=null,s=parent;void 0!=s;){try{var d=s.document;d&&(r=s)}catch(e){}s=s==top?null:s.parent}var o=r||top}var l=!1;try{var d=o.document;d&&(l=!0)}catch(e){}var c=n&&self!=top&&l?o:self;c.com=c.com||{},c.com.adtech=c.com.adtech||{},c.com.adtech.AdtechCustomAd$AD_ID$=function(){};var v=c.com.adtech.AdtechCustomAd$AD_ID$;v.prototype.elem={},v.prototype.elem.topWin=window.parent,v.prototype.elem.targetWindow=c,v.prototype.tools={events:{triggerEvent:function(e,t){var n;document.createEvent?(n=document.createEvent("HTMLEvents"),n.initEvent(t,!0,!0)):document.createEventObject&&(n=document.createEventObject(),n.eventType=t),n.eventName=t,e.dispatchEvent?e.dispatchEvent(n):e.fireEvent&&htmlEvents["on"+t]?e.fireEvent("on"+n.eventType,n):e[t]?e[t]():e["on"+t]&&e["on"+t]()},addEvent:function(e,t,n){e.addEventListener?e.addEventListener(t,n,!1):e.attachEvent&&htmlEvents["on"+t]?e.attachEvent("on"+t,n):e["on"+t]=n},removeEvent:function(e,t,n){e.removeventListener?e.removeEventListener(t,n,!1):e.detachEvent&&htmlEvents["on"+t]?e.detachEvent("on"+t,n):e["on"+t]=null}},mask:function(e,t){},getPercentage:function(e,t){return e/100*t},getSizeStyle:function(e,t){var n=(this.tools,{}),i=parseInt(e,10),e=e.split(i)[1];return data={num:isNaN(parseFloat(i))?0:i,val:void 0!==e?e:"px"},"%"==data.val?(n.px=Math.round(t/100*data.num),n.percent=data.num):(n.px=data.num,n.percent=data.num/t*100),n},getViewportSize:function(e){if(e=e||window,null!=e.innerWidth)return{w:e.innerWidth,h:e.innerHeight};var t=e.document;return"CSS1Compat"==document.compatMode?{w:t.documentElement.clientWidth,h:t.documentElement.clientHeight}:{w:t.body.clientWidth,h:t.body.clientHeight}}},v.prototype.Platform={};var E=v.prototype.Platforms={};E.BeOn=function(e){return this.advert=e,this.ready=!1,this.config=this.configure(this.init.bind(this)),this},E.BeOn.prototype.createEvents=function(e){ADTECH.event("VIDIBLE_VIDEO_PLAY"),ADTECH.event("VIDIBLE_VIDEO_PAUSE"),ADTECH.event("VIDIBLE_VIDEO_START"),ADTECH.event("VIDIBLE_VIDEO_END"),ADTECH.event("VIDIBLE_VIDEO_SEEKEND"),ADTECH.event("VIDIBLE_VIDEO_TIMEUPDATE"),ADTECH.event("VIDIBLE_VIDEO_OPTIMISED_TIMEUPDATE"),ADTECH.event("VIDIBLE_AD_START"),ADTECH.event("VIDIBLE_AD_END"),ADTECH.event("VIDIBLE_FULLSCREEN_OPEN"),ADTECH.event("VIDIBLE_FULLSCREEN_CLOSE"),ADTECH.event("VIDIBLE_SCROLL"),ADTECH.event("VIDIBLE_INVIEW"),ADTECH.event("VIDIBLE_OUTVIEW"),ADTECH.event("VIDIBLE_MOUSEENTER"),ADTECH.event("VIDIBLE_MOUSELEAVE"),ADTECH.event("VIDIBLE_FIRE_PLAY"),ADTECH.event("VIDIBLE_FIRE_PAUSE"),ADTECH.event("VIDIBLE_FIRE_SEEK"),ADTECH.event("VIDIBLE_FIRE_VOLUME"),ADTECH.event("VIDIBLE_FIRE_MUTE"),ADTECH.event("VIDIBLE_FIRE_UNMUTE"),ADTECH.event("VIDIBLE_FIRE_LAYOUT"),ADTECH.event("VIDIBLE_FIRE_HIDE_POSTER"),ADTECH.event("VIDIBLE_FIRE_SHOW_POSTER"),ADTECH.event("VIDIBLE_FIRE_HIDE_INFOBAR"),ADTECH.event("VIDIBLE_FIRE_HIDE_CONTROL"),ADTECH.event("VIDIBLE_FIRE_SHOW_CONTROL"),ADTECH.event("VIDIBLE_FIRE_SEND_META")},E.BeOn.prototype.configure=function(e){var t=this;return this.getMetaData(function(n){t.config.beOnAd=n["BeOn Ad"],t.config.vdbPid=n["Player PID"],t.config.vdbBcid=n["Player BCID"],t.config.addynSrc=n["customAd URL"];window.parent;e()}),{}},E.BeOn.prototype.getMetaData=function(e){var t=this;this.tools.events.addEvent(this.advert.eventBus,"VIDIBLE_FIRE_SEND_META",function(n){e(n.meta),t.ready=!0})},E.BeOn.prototype.getElements=function(){var e=this.elem;return e.poster=e.targetWindow.document.getElementsByClassName("poster-outer-container")[0],e.videosContainer=e.targetWindow.document.getElementById("videos-container"),e.overlayContainer=e.targetWindow.document.getElementsByClassName("vdb-player-overlay-container")[0],e.AolHtml5Player=e.targetWindow.document.getElementById("AolHtml5Player"),e.rawVideo=null!==e.videosContainer&&e.videosContainer.firstChild,e.vdbContainer=this.getVdbContainer(),e.adInfoBar=e.targetWindow.document.getElementsByClassName("ad-info-bar")[0],e.controlBar=e.targetWindow.document.getElementsByClassName("control-bar-container")[0],e},E.BeOn.prototype.getDisplayType=function(){return this.canAccessParentIFrame()?window.parent.parent.parent.$ONEPreview?"standard":"onecreative.aol.com"==window.location.hostname||""==window.location.hostname?(window.parent.$ONEPreview=!0,"onepreview"):"standard":"wrapped"},E.BeOn.prototype.canAccessParentIFrame=function(){try{window.parent.parent.parent.$ONEPreview}catch(e){return!1}return!0},E.BeOn.prototype.init=function(){switch(this.getDisplayType()){case"standard":this.elem.playerContainer=window.parent.document.getElementsByClassName("vdb_player")[0],this.player=this.player||this.elem.playerContainer.vdb_Player,this.vidible=this.vidible||this.elem.topWin.vidible,this.elem=this.getElements(),this.aspectRatio=parseFloat((this.elem.videosContainer.offsetWidth/this.elem.videosContainer.offsetHeight).toFixed(4)),this.attachPlayerEvents(),this.attachMethods(),this.defaultLayout(),this.scrollEvent(),this.mouseEvents();break;case"wrapped":this.elem.playerContainer=window.parent.document.getElementsByClassName("vdb_player")[0],this.player=this.player||this.elem.playerContainer.vdb_Player,this.vidible=this.vidible||this.elem.topWin.vidible,this.elem=this.getElements(),this.aspectRatio=parseFloat((this.elem.videosContainer.offsetWidth/this.elem.videosContainer.offsetHeight).toFixed(4)),this.attachPlayerEvents(),this.attachMethods(),this.defaultLayout(),this.mouseEvents();break;case"onepreview":this.Preview.prototype.config=this.config,this.Preview.prototype.elem=this.elem,this.Preview.prototype.advert=this.advert,this.Preview=new this.Preview,window.$ONEpreview=!0}return this},E.BeOn.prototype.getVdbContainer=function(e){if(void 0===e)var e=window.parent.document.getElementsByClassName("vdb_player")[0];var t=e.children;for(var n in t)if("string"==typeof t[n].id&&0==t[n].id.indexOf("vdb_"))return t[n]},E.BeOn.prototype.attachPlayerEvents=function(e){var t=this,n={};n.VIDEO_START=function(e){},n.VIDEO_END=function(e){t.elem.videosContainer.style.pointerEvents="none"},n.VIDEO_PLAY=function(e){t.elem.videosContainer.style.pointerEvents="all"},n.VIDEO_PAUSE=function(e){},n.VIDEO_SEEKEND=function(e){},n.AD_START=function(e){t.elem.videosContainer.style.pointerEvents="all"},n.AD_END=function(e){t.elem.videosContainer.style.pointerEvents="none"},n.ENTER_FULLSCREEN=function(e){t.fullscreenSwitch()},n.EXIT_FULLSCREEN=function(e){t.fullscreenSwitch()};for(var i in n)this.tools.events.addEvent(this.player,this.vidible[i],n[i])},E.BeOn.prototype.scrollEvent=function(){function e(){return window.parent.scrollY}function t(e){var t=n.tools.getViewportSize(window.top),o=i.offsetTop,r=i.offsetHeight,s=r/2,d=e+t.h,s=r/2;d>=o+s&&!(e>o+r-s)?a||(a=!0,n.dispatchEvent("INVIEW",{})):a&&(a=!1,n.dispatchEvent("OUTVIEW",{}))}var n=this,i=n.elem.playerContainer,a=!1,o=0,r=!1;window.parent.addEventListener("scroll",function(i){o=e(),r||window.parent.requestAnimationFrame(function(){t(o),r=!1,n.dispatchEvent("SCROLL",{scrollPos:o})}),r=!0}),setTimeout(function(){o=e(),t(o)},200)},E.BeOn.prototype.mouseEvents=function(){var e=this,t=this.elem.playerContainer;t.addEventListener("mouseenter",function(t){e.dispatchEvent("MOUSEENTER",{})}),t.addEventListener("mouseleave",function(t){e.dispatchEvent("MOUSELEAVE",{})})},E.BeOn.prototype.dispatchEvent=function(e,t){var n=new this.data.richMediaEvent("VIDIBLE_"+e);n.meta=t,this.advert.eventBus.dispatchEvent(n)},E.BeOn.prototype.fullscreenSwitch=function(){var e=this;this.isFullscreen^=!0,this.isFullscreen?(this.elem.AolHtml5Player.style.height="100%",this.elem.vdbContainer.style.paddingBottom="100%",this.elem.overlayContainer.style.height="100%",this.elem.adContainer.style.height="100%",this.elem.overlayContainer.style.height="100%",setTimeout(function(){e.elem.AolHtml5Player.style.height="100%"},1)):setTimeout(function(){e.layout(e.sizing)},1)},E.BeOn.prototype.attachMethods=function(){var e=this,t=this.elem.targetWindow,n=t.document.head||t.document.getElementsByTagName("head")[0],i=t.document.createElement("style");i.type="text/css",e.tools.events.addEvent(e.advert.eventBus,"VIDIBLE_FIRE_HIDE_POSTER",function(e){i.appendChild(document.createTextNode(".poster-outer-container { display:none; }")),n.appendChild(i)}),e.tools.events.addEvent(e.advert.eventBus,"VIDIBLE_FIRE_SHOW_POSTER",function(e){i.appendChild(document.createTextNode(".poster-outer-container { display:block; }")),n.appendChild(i)}),e.tools.events.addEvent(e.advert.eventBus,"VIDIBLE_FIRE_LAYOUT",function(t){e.layout(t.meta)}),e.tools.events.addEvent(e.advert.eventBus,"VIDIBLE_FIRE_HIDE_CONTROL",function(t){e.elem.controlBar.style.display="none"}),e.tools.events.addEvent(e.advert.eventBus,"VIDIBLE_FIRE_SHOW_CONTROL",function(t){e.elem.controlBar.style.display="block"}),e.tools.events.addEvent(e.advert.eventBus,"VIDIBLE_FIRE_PLAY",function(t){e.player.play()}),e.tools.events.addEvent(e.advert.eventBus,"VIDIBLE_FIRE_PAUSE",function(t){e.player.pause()}),e.tools.events.addEvent(e.advert.eventBus,"VIDIBLE_FIRE_SEEK",function(t){e.player.seekTo(t.meta)}),e.tools.events.addEvent(e.advert.eventBus,"VIDIBLE_FIRE_HIDE_INFOBAR",function(t){e.hideInfoBar()}),e.tools.events.addEvent(e.advert.eventBus,"VIDIBLE_FIRE_VOLUME",function(t){e.player.volume(t.meta)}),e.tools.events.addEvent(e.advert.eventBus,"VIDIBLE_FIRE_MUTE",function(t){e.player.volume(0)}),e.tools.events.addEvent(e.advert.eventBus,"VIDIBLE_FIRE_UNMUTE",function(t){e.player.volume(100)})},E.BeOn.prototype.hideInfoBar=function(){this.elem.adInfoBar.style.display="none"},E.BeOn.prototype.defaultLayout=function(){this.elem.overlayContainer.style.pointerEvents="all",this.elem.overlayContainer.style.overflow="hidden"},E.BeOn.prototype.layout=function(e){function t(e){return-1!==e.toString().indexOf("%")?"percent":-1!==e.toString().indexOf("px")?"pixels":"integer"}function n(e,n){switch(t(e)){case"integer":e=e;break;case"pixels":e=e.replace("px",""),e=e;break;case"percent":e=e.replace("%",""),e*=n/100;break;default:e=!1}return e=parseInt(e,10)}this.sizing=e;var i=(this.elem,this.aspectRatio),a=n("100%",this.elem.videosContainer.offsetWidth),o=a/i,r=(n(e.height,this.elem.videosContainer.offsetWidth),n(e.height,o),n(e.paddingTop,o)),s=n(e.paddingBottom,this.elem.videosContainer.offsetHeight);return this.elem.targetWindow.document.body.style.paddingTop=r+"px",this.elem.AolHtml5Player.style.height=o+"px",this.elem.vdbContainer.style.height="auto",this.elem.vdbContainer.style.paddingBottom=o+r+s+"px",this.elem.overlayContainer.style.height="100%",this.elem.adContainer.style.height="100%",this.elem.targetWindow.document.body.style.boxSizing="border-box",this.elem.targetWindow.document.body.style.paddingBottom=s+"px",this.elem.overlayContainer.style.position="fixed",this.elem.adContainer.style.width="100%",this.elem.adContent.style.height="100%",this.elem.adContent.style.width="100%",this.elem.adIframe.style.height="100%",this.elem.adIframe.style.width="100%",this},E.BeOn.prototype.Preview=function(){this.renderVidibleIframe()};var h=E.BeOn.prototype.Preview;h.prototype.getOnePreviewWrapper=function(){return document.body.getElementsByClassName("adPos")[0]},h.prototype.applyPreviewWrapperStyle=function(){var e={previewWrapperId:"preview-"+this.advert.canvasId,adContentId:"adContent-"+this.advert.canvasId,adPosId:"adPos-"+this.advert.canvasId};for(var t in e)wrapper=document.getElementById(e[t]),wrapper.style.height="100%",wrapper.style.overflow="hidden"},h.prototype.renderVidibleIframe=function(){var e=this;this.elem.onePreviewAdSlot=this.getOnePreviewWrapper(),this.removeOnePreview();var t=document.createElement("iframe");t.style.position="relative",t.style.top=0,t.style.left=0,t.style.width="640px",t.style.height="100%",t.style.border=0,this.elem.onePreviewAdSlot.appendChild(t);var n=document.createElement("div");n.id=this.config.vdbPid,n.className="vdb_player vdb_"+this.config.vdbPid+this.config.vdbBcid,this.elem.playerContainer=n;var i=document.createElement("script");return i.src="//delivery.vidible.tv/jsonp/pid="+this.config.vdbPid+"/"+this.config.vdbBcid+".js",n.appendChild(i),t.contentWindow.document.body.appendChild(n),this.applyPreviewWrapperStyle(),this.playerReady(t,n,function(t){var n=e.config.addynSrc,i='<script type="text/javascript" async="" src="'+n+'"></script>',a=document.createElement("iframe");a.src="about:blank",a.style.display="none",a.onload=function(){a.contentWindow.document.write(i)},a.src="about:blank",t.appendChild(a)}),this},h.prototype.playerReady=function(e,t,n){function i(i){var a,o=e.contentWindow.vidible,r=t.children;for(var s in r)"string"==typeof r[s].id&&0==r[s].id.indexOf("vdb_")&&(a=r[s]);i.addEventListener(o.PLAYER_READY,function(e){n(a)})}var a=t;!function(e,t){if(e.vdb_Player)t(e.vdb_Player);else{var n=arguments.callee;setTimeout(function(){n(e,t)},1)}}(a,i)},h.prototype.removeOnePreview=function(){return this.advert.assetContainers.main.anchorDiv.remove(),this},v.prototype.createEvents=function(e){ADTECH.event("ADTECH_RESIZE"),ADTECH.event("ADTECH_MASK"),ADTECH.event("FIRE_ADTECH_SEND_META"),ADTECH.event("FIRE_ADTECH_CONFIG"),ADTECH.event("FIRE_ADTECH_LAYOUT"),ADTECH.event("FIRE_ADTECH_ADD_WRAPPER_ANIMATION"),ADTECH.event("FIRE_ADTECH_REMOVE_WRAPPER_ANIMATION")},v.prototype.preInit=function(){null!=window&&(window.com=com||{},com.adtech=window.com.adtech)},v.prototype.init=function(e){this.data={},this.advert=e,this.elem.adContainer=e.assetContainers.main.anchorDiv,this.elem.adContent=e.assetContainers.main.anchorDiv.firstChild,this.elem.adIframe=this.elem.adContent.firstChild,this.elem.adBody=document||this.elem.adIframe.contentWindow.document,this.data.utils=c.com.adtech.Utils_$VERSION$,this.data.globalEventBus=c.adtechAdManager_$VERSION$.globalEventBus,this.data.richMediaEvent=c.com.adtech.RichMediaEvent_$VERSION$,this.initPlatforms(),this.defaultLayout(),this.checkReady(),this.attachListeners()},v.prototype.initPlatforms=function(){for(var e in this.Platforms){var t=this.Platforms[e].prototype;t.parent=this,t.elem=this.elem,t.resize=t.resize||!1,t.data=this.data,t.tools=this.tools,t.ready=!0,this.Platform[e]=new this.Platforms[e](this.advert)}},v.prototype.checkReady=function(){var e=this;setTimeout(function(){for(var t in e.Platform){if(0==e.Platform[t].ready){e.checkReady();break}e.ready=!0}},100)},v.prototype.dispatchEvent=function(e,t){var n=new this.data.richMediaEvent(e);n.meta=t,this.advert.eventBus.dispatchEvent(n)},v.prototype.defaultLayout=function(e){this.elem.adContent.style.left=0},v.prototype.attachListeners=function(){var e=this;e.tools.events.addEvent(e.advert.eventBus,"ADTECH_MASK",function(t){var n=e.calculate(t.meta.t,e.elem.adContainer.offsetHeight),i=e.calculate(t.meta.r,e.elem.adContainer.offsetWidth),a=e.calculate(t.meta.b,e.elem.adContainer.offsetHeight),o=e.calculate(t.meta.l,e.elem.adContainer.offsetWidth);e.elem.adContainer.style.position="absolute",e.elem.adContainer.style.overflow="hidden",e.elem.adContainer.style.clip="rect("+n+"px "+i+"px "+a+"px "+o+"px)"}),e.tools.events.addEvent(e.advert.eventBus,"FIRE_ADTECH_ADD_WRAPPER_ANIMATION",function(t){e.elem.adContainer.style.WebkitTransition="all 0.2s ease",e.elem.adContainer.style.MozTransition="all 0.2s ease"}),e.tools.events.addEvent(e.advert.eventBus,"FIRE_ADTECH_REMOVE_WRAPPER_ANIMATION",function(t){e.elem.adContainer.style.WebkitTransition="inherit",e.elem.adContainer.style.MozTransition="inherit"})},v.prototype.percentOrPixels=function(e){return-1!==e.toString().indexOf("%")?"percent":-1!==e.toString().indexOf("px")?"pixels":"integer"},v.prototype.calculate=function(e,t){switch(this.percentOrPixels(e)){case"integer":e=e;break;case"pixels":e=e.replace("px",""),e=e;break;case"percent":e=e.replace("%",""),e*=t/100;break;default:e=!1}return e=parseInt(e,10)},c.adtechCallbackInstances=c.adtechCallbackInstances||[];var p=c.adtechCallbackInstances.length;c.adtechCallbackInstances[p]=new c.com.adtech.AdtechCustomAd$AD_ID$,c.adtechAdCallbacks=c.adtechAdCallbacks||{},c.adtechAdCallbacks[e.adServerVars.uid]=c.adtechAdCallbacks[e.adServerVars.uid]||[],c.adtechAdCallbacks[e.adServerVars.uid].push(c.adtechCallbackInstances[p])}(adtechAdConfig);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN1c3RvbUFkLndyYXBwZXIuanMiXSwibmFtZXMiOlsiYWRDb25maWciLCJwcmV2aWV3IiwiYXNzZXRDb250YWluZXJzIiwibWFpbiIsImlzRXhwYW5kYWJsZSIsInRhcmdldFdpbiIsIndpbmRvdyIsImZyYW1lRWxlbWVudCIsInBhcmVudE5vZGUiLCJmaXJzdENoaWxkIiwiY29udGVudFdpbmRvdyIsIm92ZXJyaWRlcyIsImRpc3BsYXlXaW5kb3dUYXJnZXQiLCJlIiwiY29uc29sZSIsIndhcm4iLCJyZXF1aXJlc0JyZWFrb3V0Iiwic2VsZiIsImlkIiwiaGFzT3duUHJvcGVydHkiLCJjb250YWluZXIiLCJ0eXBlIiwiYWR0ZWNoSWZyYW1lSGFzaEFycmF5IiwidG9wIiwicGFyZW50IiwiY2FsY3VsYXRlZFRhcmdldCIsImN1cnJlbnRXaW5kb3ciLCJ1bmRlZmluZWQiLCJ0YXJnZXREb2MiLCJkb2N1bWVudCIsInRhcmdldElzRnJpZW5kbHkiLCJ0YXJnZXRXaW5kb3ciLCJjb20iLCJhZHRlY2giLCJBZHRlY2hDdXN0b21BZCRBRF9JRCQiLCJjdXN0b21BZCIsInByb3RvdHlwZSIsImVsZW0iLCJ0b3BXaW4iLCJ0b29scyIsImV2ZW50cyIsInRyaWdnZXJFdmVudCIsImVsIiwiZXZlbnROYW1lIiwiZXZlbnQiLCJjcmVhdGVFdmVudCIsImluaXRFdmVudCIsImNyZWF0ZUV2ZW50T2JqZWN0IiwiZXZlbnRUeXBlIiwiZGlzcGF0Y2hFdmVudCIsImZpcmVFdmVudCIsImh0bWxFdmVudHMiLCJhZGRFdmVudCIsImhhbmRsZXIiLCJhZGRFdmVudExpc3RlbmVyIiwiYXR0YWNoRXZlbnQiLCJyZW1vdmVFdmVudCIsInJlbW92ZXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJkZXRhY2hFdmVudCIsIm1hc2siLCJ2YWwiLCJnZXRQZXJjZW50YWdlIiwibnVtIiwicGVyY2VudGFnZSIsImdldFNpemVTdHlsZSIsInNpemUiLCJwcm9jZXNzZWQiLCJ0aGlzIiwicGFyc2VJbnQiLCJzcGxpdCIsImRhdGEiLCJpc05hTiIsInBhcnNlRmxvYXQiLCJNYXRoIiwicm91bmQiLCJnZXRWaWV3cG9ydFNpemUiLCJ3IiwiaW5uZXJXaWR0aCIsImgiLCJpbm5lckhlaWdodCIsImQiLCJjb21wYXRNb2RlIiwiZG9jdW1lbnRFbGVtZW50IiwiY2xpZW50V2lkdGgiLCJjbGllbnRIZWlnaHQiLCJib2R5IiwiUGxhdGZvcm0iLCJDYVBsYXRmb3JtIiwiUGxhdGZvcm1zIiwiQmVPbiIsImFkdmVydCIsInJlYWR5IiwiY29uZmlnIiwiY29uZmlndXJlIiwiaW5pdCIsImJpbmQiLCJjcmVhdGVFdmVudHMiLCJBRFRFQ0giLCJjYWxsYmFjayIsImdldE1ldGFEYXRhIiwiZXZlbnRCdXMiLCJtZXRhIiwiZ2V0RWxlbWVudHMiLCJwb3N0ZXIiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwidmlkZW9zQ29udGFpbmVyIiwiZ2V0RWxlbWVudEJ5SWQiLCJvdmVybGF5Q29udGFpbmVyIiwiQW9sSHRtbDVQbGF5ZXIiLCJyYXdWaWRlbyIsInZkYkNvbnRhaW5lciIsImdldFZkYkNvbnRhaW5lciIsImFkSW5mb0JhciIsImNvbnRyb2xCYXIiLCJnZXREaXNwbGF5VHlwZSIsImNhbkFjY2Vzc1BhcmVudElGcmFtZSIsIiRPTkVQcmV2aWV3IiwibG9jYXRpb24iLCJob3N0bmFtZSIsImVycm9yIiwicGxheWVyQ29udGFpbmVyIiwicGxheWVyIiwidmRiX1BsYXllciIsInZpZGlibGUiLCJhc3BlY3RSYXRpbyIsIm9mZnNldFdpZHRoIiwib2Zmc2V0SGVpZ2h0IiwidG9GaXhlZCIsImF0dGFjaFBsYXllckV2ZW50cyIsImF0dGFjaE1ldGhvZHMiLCJkZWZhdWx0TGF5b3V0Iiwic2Nyb2xsRXZlbnQiLCJtb3VzZUV2ZW50cyIsIlByZXZpZXciLCIkT05FcHJldmlldyIsIm5vZGVzIiwiY2hpbGRyZW4iLCJrZXkiLCJpbmRleE9mIiwiX3RoaXMiLCJWSURFT19TVEFSVCIsIlZJREVPX0VORCIsInN0eWxlIiwicG9pbnRlckV2ZW50cyIsIlZJREVPX1BMQVkiLCJWSURFT19QQVVTRSIsIlZJREVPX1NFRUtFTkQiLCJBRF9TVEFSVCIsIkFEX0VORCIsIkVOVEVSX0ZVTExTQ1JFRU4iLCJmdWxsc2NyZWVuU3dpdGNoIiwiRVhJVF9GVUxMU0NSRUVOIiwic2Nyb2xsUG9zaXRpb24iLCJzY3JvbGxZIiwiY2hlY2tJZkluVmlldyIsInNjcm9sbFBvcyIsIndpblNpemUiLCJhZFBvcyIsIm9mZnNldFRvcCIsImFkSGVpZ2h0IiwicGxheU1hcmdpbiIsInkiLCJpblZpZXciLCJsYXN0X2tub3duX3Njcm9sbF9wb3NpdGlvbiIsInRpY2tpbmciLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJzZXRUaW1lb3V0IiwiZXZlbnREYXRhIiwicmljaE1lZGlhRXZlbnQiLCJpc0Z1bGxzY3JlZW4iLCJoZWlnaHQiLCJwYWRkaW5nQm90dG9tIiwiYWRDb250YWluZXIiLCJsYXlvdXQiLCJzaXppbmciLCJoZWFkIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJjcmVhdGVFbGVtZW50IiwiYXBwZW5kQ2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsImRpc3BsYXkiLCJwbGF5IiwicGF1c2UiLCJzZWVrVG8iLCJoaWRlSW5mb0JhciIsInZvbHVtZSIsIm92ZXJmbG93IiwicGVyY2VudE9yUGl4ZWxzIiwidG9TdHJpbmciLCJjYWxjdWxhdGUiLCJyZXBsYWNlIiwidmlkZW9XaWR0aCIsInZpZGVvSGVpZ2h0IiwicGFkZGluZ1RvcCIsImJveFNpemluZyIsInBvc2l0aW9uIiwid2lkdGgiLCJhZENvbnRlbnQiLCJhZElmcmFtZSIsInJlbmRlclZpZGlibGVJZnJhbWUiLCJnZXRPbmVQcmV2aWV3V3JhcHBlciIsImFwcGx5UHJldmlld1dyYXBwZXJTdHlsZSIsIndyYXBwZXJzIiwicHJldmlld1dyYXBwZXJJZCIsImNhbnZhc0lkIiwiYWRDb250ZW50SWQiLCJhZFBvc0lkIiwid3JhcHBlciIsIm9uZVByZXZpZXdBZFNsb3QiLCJyZW1vdmVPbmVQcmV2aWV3IiwiaWZyYW1lIiwibGVmdCIsImJvcmRlciIsInZkYldyYXBwZXIiLCJjbGFzc05hbWUiLCJ2ZGJTY3JpcHQiLCJzcmMiLCJwbGF5ZXJSZWFkeSIsInRhcmdldCIsImFkZHluU3JjIiwic2NyaXB0IiwiY3VzdG9tQWRQcmV2aWV3Iiwib25sb2FkIiwid3JpdGUiLCJvblBsYXllclJlYWR5IiwiaW5zZXJ0IiwiZGl2IiwiY2IiLCJmbiIsImFyZ3VtZW50cyIsImNhbGxlZSIsImFuY2hvckRpdiIsInJlbW92ZSIsInByZUluaXQiLCJhZEJvZHkiLCJ1dGlscyIsIlV0aWxzXyRWRVJTSU9OJCIsImdsb2JhbEV2ZW50QnVzIiwiYWR0ZWNoQWRNYW5hZ2VyXyRWRVJTSU9OJCIsIlJpY2hNZWRpYUV2ZW50XyRWRVJTSU9OJCIsImluaXRQbGF0Zm9ybXMiLCJjaGVja1JlYWR5IiwiYXR0YWNoTGlzdGVuZXJzIiwicHJvdG8iLCJyZXNpemUiLCJldmVudF9uYW1lIiwiZXZlbnRfZGF0YSIsInQiLCJyIiwiYiIsImwiLCJjbGlwIiwiV2Via2l0VHJhbnNpdGlvbiIsIk1velRyYW5zaXRpb24iLCJhZHRlY2hDYWxsYmFja0luc3RhbmNlcyIsImluc3RhbmNlSW5kZXgiLCJsZW5ndGgiLCJhZHRlY2hBZENhbGxiYWNrcyIsImFkU2VydmVyVmFycyIsInVpZCIsInB1c2giLCJhZHRlY2hBZENvbmZpZyJdLCJtYXBwaW5ncyI6IkNBS0EsU0FBVUEsR0FNUixJQUFLQSxFQUFTQyxRQUFTLENBQ3JCRCxFQUFTRSxnQkFBZ0JDLEtBQUtDLGNBQWUsQ0FDN0MsS0FDRSxHQUFJQyxHQUFZQyxPQUFPQyxhQUFhQyxXQUFXQyxXQUFXQSxXQUFXQyxhQUNyRVYsR0FBU1csVUFBWVgsRUFBU1csY0FDOUJYLEVBQVNXLFVBQVVDLG9CQUFzQlAsRUFDekMsTUFBTVEsR0FDTkMsUUFBUUMsS0FBSyxtRkFJakIsR0FBSUMsSUFBbUIsQ0FDdkIsS0FBS2hCLEVBQVNXLFdBQWFYLEVBQVNXLFVBQVVD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Y3VzdG9tQWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEJvaWxlcnBsYXRlIGNvZGUgcmVxdWlyZWQgdG8gaG9vayBpbnRvIHRoZSBBRFRFQ0ggcmljaCBtZWRpYSBsaWJyYXJ5LlxuICpcbiAqIEZvciBBUEkgZG9jdW1lbnRhdGlvbiwgcGxlYXNlIGNvbnRhY3QgY2FudmFzLWhlbHBAYWR0ZWNoLmNvbVxuICovXG4oZnVuY3Rpb24oYWRDb25maWcpIHtcblxuICAvKlxuICAgKiBWaWRpYmxlIGNoZWNrXG4gICAqIFRoaXMgYXNzaWducyB0aGUgdmlkaWJsZSBwYXJlbnQgd2luZG93IGFzIHRoZSB0YXJnZXQgd2luZG93XG4gICAqL1xuICBpZiAoIWFkQ29uZmlnLnByZXZpZXcpIHtcbiAgICBhZENvbmZpZy5hc3NldENvbnRhaW5lcnMubWFpbi5pc0V4cGFuZGFibGUgPSB0cnVlO1xuICAgIHRyeSB7XG4gICAgICB2YXIgdGFyZ2V0V2luID0gd2luZG93LmZyYW1lRWxlbWVudC5wYXJlbnROb2RlLmZpcnN0Q2hpbGQuZmlyc3RDaGlsZC5jb250ZW50V2luZG93O1xuICAgICAgYWRDb25maWcub3ZlcnJpZGVzID0gYWRDb25maWcub3ZlcnJpZGVzIHx8IHt9O1xuICAgICAgYWRDb25maWcub3ZlcnJpZGVzLmRpc3BsYXlXaW5kb3dUYXJnZXQgPSB0YXJnZXRXaW47XG4gICAgfSBjYXRjaChlKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ0ZhaWxlZCB0byBmaW5kIHRhcmdldCBpZnJhbWUgaW4gcGxheWVyIGVudmlyb25tZW50OiBIYXMgdGhlIHN0cnVjdHVyZSBjaGFuZ2VkPycpO1xuICAgIH1cbiAgfVxuICBcbiAgdmFyIHJlcXVpcmVzQnJlYWtvdXQgPSBmYWxzZTtcbiAgaWYgKCFhZENvbmZpZy5vdmVycmlkZXMgfHwgYWRDb25maWcub3ZlcnJpZGVzLmRpc3BsYXlXaW5kb3dUYXJnZXQgIT0gc2VsZikge1xuICAgIGZvciAodmFyIGlkIGluIGFkQ29uZmlnLmFzc2V0Q29udGFpbmVycykge1xuICAgICAgaWYgKGFkQ29uZmlnLmFzc2V0Q29udGFpbmVycy5oYXNPd25Qcm9wZXJ0eShpZCkpIHtcbiAgICAgICAgdmFyIGNvbnRhaW5lciA9IGFkQ29uZmlnLmFzc2V0Q29udGFpbmVyc1tpZF07XG4gICAgICAgIGlmIChjb250YWluZXIudHlwZSAhPSAnaW5saW5lRGl2JyB8fCBjb250YWluZXIuaXNFeHBhbmRhYmxlKSB7XG4gICAgICAgICAgcmVxdWlyZXNCcmVha291dCA9IHRydWU7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBpZiAoYWRDb25maWcub3ZlcnJpZGVzICYmIGFkQ29uZmlnLm92ZXJyaWRlcy5kaXNwbGF5V2luZG93VGFyZ2V0KSB7XG4gICAgdmFyIGRpc3BsYXlXaW5kb3dUYXJnZXQgPSBhZENvbmZpZy5vdmVycmlkZXMuZGlzcGxheVdpbmRvd1RhcmdldDtcbiAgICBkaXNwbGF5V2luZG93VGFyZ2V0ID0gKHR5cGVvZiBhZHRlY2hJZnJhbWVIYXNoQXJyYXkgIT0gJ3VuZGVmaW5lZCcgJiYgc2VsZiAhPSB0b3ApID9cbiAgICAgICAgZGlzcGxheVdpbmRvd1RhcmdldC5wYXJlbnQgOiBkaXNwbGF5V2luZG93VGFyZ2V0O1xuICB9IGVsc2Uge1xuICAgIHZhciBjYWxjdWxhdGVkVGFyZ2V0ID0gbnVsbDtcbiAgICB2YXIgY3VycmVudFdpbmRvdyA9IHBhcmVudDtcbiAgICB3aGlsZSAoY3VycmVudFdpbmRvdyAhPSB1bmRlZmluZWQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHZhciB0YXJnZXREb2MgPSBjdXJyZW50V2luZG93LmRvY3VtZW50O1xuICAgICAgICBpZiAodGFyZ2V0RG9jKSB7XG4gICAgICAgICAgY2FsY3VsYXRlZFRhcmdldCA9IGN1cnJlbnRXaW5kb3c7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2goZSkge31cbiAgICAgIGN1cnJlbnRXaW5kb3cgPSAoY3VycmVudFdpbmRvdyA9PSB0b3ApID8gbnVsbCA6IGN1cnJlbnRXaW5kb3cucGFyZW50O1xuICAgIH1cbiAgICB2YXIgZGlzcGxheVdpbmRvd1RhcmdldCA9IGNhbGN1bGF0ZWRUYXJnZXQgfHwgdG9wO1xuICB9XG5cbiAgdmFyIHRhcmdldElzRnJpZW5kbHkgPSBmYWxzZTtcbiAgdHJ5IHtcbiAgICB2YXIgdGFyZ2V0RG9jID0gZGlzcGxheVdpbmRvd1RhcmdldC5kb2N1bWVudDtcbiAgICBpZiAodGFyZ2V0RG9jKSB7XG4gICAgICB0YXJnZXRJc0ZyaWVuZGx5ID0gdHJ1ZTtcbiAgICB9XG4gIH0gY2F0Y2goZSkge31cblxuICB2YXIgdGFyZ2V0V2luZG93ID0gKHJlcXVpcmVzQnJlYWtvdXQgJiYgKHNlbGYgIT0gdG9wICYmIHRhcmdldElzRnJpZW5kbHkpKSA/XG4gICAgICAgICAgZGlzcGxheVdpbmRvd1RhcmdldCA6IHNlbGY7XG4gIFxuICB0YXJnZXRXaW5kb3cuY29tID0gdGFyZ2V0V2luZG93LmNvbSB8fCB7fTtcbiAgdGFyZ2V0V2luZG93LmNvbS5hZHRlY2ggPSB0YXJnZXRXaW5kb3cuY29tLmFkdGVjaCB8fCB7fTtcblxuICAvKlxuICAgKiBDdXN0b21BZC5qcyBDb25zdHJ1Y3RvclxuICAgKi9cbiAgdGFyZ2V0V2luZG93LmNvbS5hZHRlY2guQWR0ZWNoQ3VzdG9tQWQkQURfSUQkID0gZnVuY3Rpb24oKSB7fTtcbiAgXG4gIC8qXG4gICAqIEluY2x1ZGUgcGFydGlhbHNcbiAgICovXG4gIC8vIENvcmUgY2xhc3NcbiAgLyoqXG4gICAqIEN1c3RvbUFkLmpzIFByb3RvdHlwZSAtIGF0dGFjaGVkIHRvIEN1c3RvbUFkIHByb3RvdHlwZVxuICAgKi9cbiAgdmFyIGN1c3RvbUFkID0gdGFyZ2V0V2luZG93LmNvbS5hZHRlY2guQWR0ZWNoQ3VzdG9tQWQkQURfSUQkO1xuICBcbiAgLy8gQWRkIHdpbmRvdyBvYmplY3RzIHRvIGVsZW1lbnRzIHByb3BlcnR5XG4gIGN1c3RvbUFkLnByb3RvdHlwZS5lbGVtID0ge307XG4gIGN1c3RvbUFkLnByb3RvdHlwZS5lbGVtLnRvcFdpbiA9IHdpbmRvdy5wYXJlbnQ7XG4gIGN1c3RvbUFkLnByb3RvdHlwZS5lbGVtLnRhcmdldFdpbmRvdyA9IHRhcmdldFdpbmRvdztcbiAgXG4gIC8vIFRvb2xraXRcbiAgLyoqXG4gICAqIEN1c3RvbSBBZCBUb29sc1xuICAgKi9cbiAgY3VzdG9tQWQucHJvdG90eXBlLnRvb2xzID0ge1xuICAgIGV2ZW50cyA6IHtcbiAgICAgIHRyaWdnZXJFdmVudCA6IGZ1bmN0aW9uKGVsLCBldmVudE5hbWUpe1xuICAgICAgICB2YXIgZXZlbnQ7XG4gICAgICAgIGlmIChkb2N1bWVudC5jcmVhdGVFdmVudCkge1xuICAgICAgICAgIGV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0hUTUxFdmVudHMnKTtcbiAgICAgICAgICBldmVudC5pbml0RXZlbnQoZXZlbnROYW1lLCB0cnVlLCB0cnVlKTtcbiAgICAgICAgfSBlbHNlIGlmIChkb2N1bWVudC5jcmVhdGVFdmVudE9iamVjdCkgey8vIElFIDwgOVxuICAgICAgICAgIGV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnRPYmplY3QoKTtcbiAgICAgICAgICBldmVudC5ldmVudFR5cGUgPSBldmVudE5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgZXZlbnQuZXZlbnROYW1lID0gZXZlbnROYW1lO1xuICAgICAgICBpZiAoZWwuZGlzcGF0Y2hFdmVudCkge1xuICAgICAgICAgIGVsLmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xuICAgICAgICB9IGVsc2UgaWYgKGVsLmZpcmVFdmVudCAmJiBodG1sRXZlbnRzWydvbicrZXZlbnROYW1lXSkgey8vIElFIDwgOVxuICAgICAgICAgIGVsLmZpcmVFdmVudCgnb24nK2V2ZW50LmV2ZW50VHlwZSxldmVudCk7Ly8gY2FuIHRyaWdnZXIgb25seSByZWFsIGV2ZW50IChlLmcuICdjbGljaycpXG4gICAgICAgIH0gZWxzZSBpZiAoZWxbZXZlbnROYW1lXSl7XG4gICAgICAgICAgZWxbZXZlbnROYW1lXSgpO1xuICAgICAgICB9IGVsc2UgaWYgKGVsWydvbicrZXZlbnROYW1lXSkge1xuICAgICAgICAgIGVsWydvbicrZXZlbnROYW1lXSgpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgYWRkRXZlbnQgOiBmdW5jdGlvbihlbCwgdHlwZSwgaGFuZGxlcil7XG4gICAgICAgIGlmIChlbC5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcih0eXBlLGhhbmRsZXIsZmFsc2UpO1xuICAgICAgICB9IGVsc2UgaWYgKGVsLmF0dGFjaEV2ZW50ICYmIGh0bWxFdmVudHNbJ29uJyt0eXBlXSl7Ly8gSUUgPCA5XG4gICAgICAgICAgZWwuYXR0YWNoRXZlbnQoJ29uJyt0eXBlLGhhbmRsZXIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGVsWydvbicrdHlwZV09aGFuZGxlcjtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHJlbW92ZUV2ZW50IDogZnVuY3Rpb24oZWwsIHR5cGUsIGhhbmRsZXIpe1xuICAgICAgICBpZihlbC5yZW1vdmV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKHR5cGUsaGFuZGxlcixmYWxzZSk7XG4gICAgICAgIH0gZWxzZSBpZiAoZWwuZGV0YWNoRXZlbnQgJiYgaHRtbEV2ZW50c1snb24nK3R5cGVdKXsvLyBJRSA8IDlcbiAgICAgICAgICBlbC5kZXRhY2hFdmVudCgnb24nK3R5cGUsaGFuZGxlcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZWxbJ29uJyt0eXBlXT1udWxsO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBtYXNrIDogZnVuY3Rpb24oZWxlbSwgdmFsKSB7XG4gICAgICAvLyBlbGVtLnN0eWxlLmNsaXAgPSAncmVjdCgnK3ZhbCsnKSc7XG4gICAgfSxcbiAgICBnZXRQZXJjZW50YWdlIDogZnVuY3Rpb24obnVtLCBwZXJjZW50YWdlKSB7XG4gICAgICByZXR1cm4gKG51bSAvIDEwMCkgKiBwZXJjZW50YWdlO1xuICAgIH0sXG4gICAgLypcbiAgICAgKiBSZXR1cm4gcGl4ZWwgKyBwZXJjZW50IHZhbHVlcyBmcm9tIGludGVnZXIgLyBzdHJpbmcgLCBlZyAnMTAlJ1xuICAgICAqL1xuICAgIGdldFNpemVTdHlsZSA6IGZ1bmN0aW9uKHZhbCwgc2l6ZSkge1xuICAgICAgLy8gY29uc29sZS5sb2codmFsLCBzaXplKVxuICAgICAgdmFyIHRvb2xzID0gdGhpcy50b29scztcbiAgICAgIHZhciBwcm9jZXNzZWQgPSB7fTtcbiAgICAgIHZhciBudW0gPSBwYXJzZUludCh2YWwsIDEwKTtcbiAgICAgIHZhciB2YWwgPSB2YWwuc3BsaXQobnVtKVsxXTtcbiAgICAgIGRhdGEgPSB7XG4gICAgICAgIG51bSA6IChpc05hTihwYXJzZUZsb2F0KChudW0pKSkgPyAwIDogbnVtKSxcbiAgICAgICAgdmFsIDogKHR5cGVvZiB2YWwhPT0ndW5kZWZpbmVkJyA/IHZhbCA6ICdweCcpXG4gICAgICB9XG4gICAgICBpZiAoZGF0YS52YWw9PSclJykge1xuICAgICAgICBwcm9jZXNzZWRbJ3B4J10gPSBNYXRoLnJvdW5kKChzaXplIC8gMTAwKSAqIGRhdGEubnVtKTtcbiAgICAgICAgcHJvY2Vzc2VkWydwZXJjZW50J10gPSBkYXRhLm51bTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3NlZFsncHgnXSA9IGRhdGEubnVtO1xuICAgICAgICBwcm9jZXNzZWRbJ3BlcmNlbnQnXSA9IGRhdGEubnVtIC8gc2l6ZSAqIDEwMDtcbiAgICAgIH1cbiAgICAgIHJldHVybiBwcm9jZXNzZWQ7XG4gICAgfSxcbiAgICBnZXRWaWV3cG9ydFNpemUgOiBmdW5jdGlvbih3KSB7XG4gICAgICAvLyBVc2UgdGhlIHNwZWNpZmllZCB3aW5kb3cgb3IgdGhlIGN1cnJlbnQgd2luZG93IGlmIG5vIGFyZ3VtZW50XG4gICAgICB3ID0gdyB8fCB3aW5kb3c7XG4gIFxuICAgICAgLy8gVGhpcyB3b3JrcyBmb3IgYWxsIGJyb3dzZXJzIGV4Y2VwdCBJRTggYW5kIGJlZm9yZVxuICAgICAgaWYgKHcuaW5uZXJXaWR0aCAhPSBudWxsKSByZXR1cm4geyB3OiB3LmlubmVyV2lkdGgsIGg6IHcuaW5uZXJIZWlnaHQgfTtcbiAgXG4gICAgICAvLyBGb3IgSUUgKG9yIGFueSBicm93c2VyKSBpbiBTdGFuZGFyZHMgbW9kZVxuICAgICAgdmFyIGQgPSB3LmRvY3VtZW50O1xuICAgICAgaWYgKGRvY3VtZW50LmNvbXBhdE1vZGUgPT0gXCJDU1MxQ29tcGF0XCIpXG4gICAgICAgICAgcmV0dXJuIHsgdzogZC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgsXG4gICAgICAgICAgICAgaDogZC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0IH07XG4gIFxuICAgICAgLy8gRm9yIGJyb3dzZXJzIGluIFF1aXJrcyBtb2RlXG4gICAgICByZXR1cm4geyB3OiBkLmJvZHkuY2xpZW50V2lkdGgsIGg6IGQuYm9keS5jbGllbnRIZWlnaHQgfTtcbiAgICB9XG4gIH07XG4gIFxuICAvKlxuICAgKiBQbGF0Zm9ybSBvYmplY3RcbiAgICovXG4gIGN1c3RvbUFkLnByb3RvdHlwZS5QbGF0Zm9ybSA9IHt9O1xuICAvLyBQbGF0Zm9ybSBjbGFzc2VzIHNob3J0aGFuZFxuICB2YXIgQ2FQbGF0Zm9ybSA9IGN1c3RvbUFkLnByb3RvdHlwZS5QbGF0Zm9ybXMgPSB7fTtcbiAgLy8gQmVPbiBQbGF0Zm9ybSBIZWxwZXIgQ2xhc3NcbiAgLy8gUGxhdGZvcm0gY29uc3RydWN0b3JcbiAgQ2FQbGF0Zm9ybS5CZU9uID0gZnVuY3Rpb24oYWR2ZXJ0KSB7XG4gIFxuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAvLyBPTkUgYWQgZGF0YVxuICAgIHRoaXMuYWR2ZXJ0ID0gYWR2ZXJ0O1xuICAgIC8vIE5vdCByZWFkeSB5ZXRcbiAgICB0aGlzLnJlYWR5ID0gZmFsc2U7XG4gIFxuICAgIC8vIEZpcmUgaW5pdCB3aGVuIGNvbmZpZyBvYmplY3QgaXMgcmVhZHlcbiAgICB0aGlzLmNvbmZpZyA9IHRoaXMuY29uZmlndXJlKHRoaXMuaW5pdC5iaW5kKHRoaXMpKTtcbiAgXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBFdmVudHMgbGlzdFxuICAgKiBOT1RFOiBObyBuZWVkIHRvIHVzZSB0aGlzIG1ldGhvZCxcbiAgICoganVzdCB1c2VkIGZvciBjcmVhdGluZyBldmVudHNcbiAgICogcmVjb3Jkc1xuICAgKi9cbiAgQ2FQbGF0Zm9ybS5CZU9uLnByb3RvdHlwZS5jcmVhdGVFdmVudHMgPSBmdW5jdGlvbihhZHZlcnQpIHtcbiAgXG4gICAgLy8gVmlkaWJsZSBldmVudHNcbiAgICBBRFRFQ0guZXZlbnQoJ1ZJRElCTEVfVklERU9fUExBWScpO1xuICAgIEFEVEVDSC5ldmVudCgnVklESUJMRV9WSURFT19QQVVTRScpO1xuICAgIEFEVEVDSC5ldmVudCgnVklESUJMRV9WSURFT19TVEFSVCcpO1xuICAgIEFEVEVDSC5ldmVudCgnVklESUJMRV9WSURFT19FTkQnKTtcbiAgICBBRFRFQ0guZXZlbnQoJ1ZJRElCTEVfVklERU9fU0VFS0VORCcpO1xuICAgIEFEVEVDSC5ldmVudCgnVklESUJMRV9WSURFT19USU1FVVBEQVRFJyk7XG4gICAgQURURUNILmV2ZW50KCdWSURJQkxFX1ZJREVPX09QVElNSVNFRF9USU1FVVBEQVRFJyk7XG4gICAgQURURUNILmV2ZW50KCdWSURJQkxFX0FEX1NUQVJUJyk7XG4gICAgQURURUNILmV2ZW50KCdWSURJQkxFX0FEX0VORCcpO1xuICAgIEFEVEVDSC5ldmVudCgnVklESUJMRV9GVUxMU0NSRUVOX09QRU4nKTtcbiAgICBBRFRFQ0guZXZlbnQoJ1ZJRElCTEVfRlVMTFNDUkVFTl9DTE9TRScpO1xuICAgIEFEVEVDSC5ldmVudCgnVklESUJMRV9TQ1JPTEwnKTtcbiAgICBBRFRFQ0guZXZlbnQoJ1ZJRElCTEVfSU5WSUVXJyk7XG4gICAgQURURUNILmV2ZW50KCdWSURJQkxFX09VVFZJRVcnKTtcbiAgICBBRFRFQ0guZXZlbnQoJ1ZJRElCTEVfTU9VU0VFTlRFUicpO1xuICAgIEFEVEVDSC5ldmVudCgnVklESUJMRV9NT1VTRUxFQVZFJyk7XG4gICAgXG4gICAgLy8gVmlkaWJsZSBtZXRob2RzXG4gICAgQURURUNILmV2ZW50KCdWSURJQkxFX0ZJUkVfUExBWScpO1xuICAgIEFEVEVDSC5ldmVudCgnVklESUJMRV9GSVJFX1BBVVNFJyk7XG4gICAgQURURUNILmV2ZW50KCdWSURJQkxFX0ZJUkVfU0VFSycpO1xuICAgIEFEVEVDSC5ldmVudCgnVklESUJMRV9GSVJFX1ZPTFVNRScpO1xuICAgIEFEVEVDSC5ldmVudCgnVklESUJMRV9GSVJFX01VVEUnKTtcbiAgICBBRFRFQ0guZXZlbnQoJ1ZJRElCTEVfRklSRV9VTk1VVEUnKTtcbiAgICBBRFRFQ0guZXZlbnQoJ1ZJRElCTEVfRklSRV9MQVlPVVQnKTtcbiAgICBBRFRFQ0guZXZlbnQoJ1ZJRElCTEVfRklSRV9ISURFX1BPU1RFUicpO1xuICAgIEFEVEVDSC5ldmVudCgnVklESUJMRV9GSVJFX1NIT1dfUE9TVEVSJyk7XG4gICAgQURURUNILmV2ZW50KCdWSURJQkxFX0ZJUkVfSElERV9JTkZPQkFSJyk7XG4gICAgQURURUNILmV2ZW50KCdWSURJQkxFX0ZJUkVfSElERV9DT05UUk9MJyk7XG4gICAgQURURUNILmV2ZW50KCdWSURJQkxFX0ZJUkVfU0hPV19DT05UUk9MJyk7XG4gICAgQURURUNILmV2ZW50KCdWSURJQkxFX0ZJUkVfU0VORF9NRVRBJyk7XG4gIFxuICB9O1xuICBcbiAgLypcbiAgICogIENvbmZpZ3VyZSBhZFxuICAgKi9cbiAgQ2FQbGF0Zm9ybS5CZU9uLnByb3RvdHlwZS5jb25maWd1cmUgPSBmdW5jdGlvbihjYWxsYmFjaykge1xuICBcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgXG4gICAgdGhpcy5nZXRNZXRhRGF0YShmdW5jdGlvbihlKSB7XG4gIFxuICAgICAgLy8gc2VsZi5jb25maWdbJ2Rpc3BsYXlUeXBlJ10gPSBzZWxmLmdldERpc3BsYXlUeXBlKCk7XG4gICAgICBzZWxmLmNvbmZpZ1snYmVPbkFkJ10gPSBlWydCZU9uIEFkJ107XG4gICAgICBzZWxmLmNvbmZpZ1sndmRiUGlkJ10gPSBlWydQbGF5ZXIgUElEJ107XG4gICAgICBzZWxmLmNvbmZpZ1sndmRiQmNpZCddID0gZVsnUGxheWVyIEJDSUQnXTtcbiAgICAgIHNlbGYuY29uZmlnWydhZGR5blNyYyddID0gZVsnY3VzdG9tQWQgVVJMJ107XG4gIFxuICAgICAgdmFyIHBhcmVudFdpbiA9IHdpbmRvdy5wYXJlbnQ7XG4gICBcbiAgICAgIC8vIFJlYWR5LCBmaXJlXG4gICAgICBjYWxsYmFjaygpO1xuICAgIH0pO1xuICBcbiAgICByZXR1cm4ge307XG4gIH1cbiAgXG4gIC8qXG4gICAqICBcbiAgICovXG4gIENhUGxhdGZvcm0uQmVPbi5wcm90b3R5cGUuZ2V0TWV0YURhdGEgPSBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAvLyBHZXQgbWV0YSBkYXRhIGZyb20gdmlkaWJsZVxuICAgIHRoaXMudG9vbHMuZXZlbnRzLmFkZEV2ZW50KHRoaXMuYWR2ZXJ0LmV2ZW50QnVzLCAnVklESUJMRV9GSVJFX1NFTkRfTUVUQScsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIGNhbGxiYWNrKGUubWV0YSk7XG4gICAgICBzZWxmLnJlYWR5ID0gdHJ1ZTtcbiAgICB9KTtcbiAgfVxuICBcbiAgLypcbiAgICogR2V0IGVsZW1lbnRzXG4gICAqL1xuICBDYVBsYXRmb3JtLkJlT24ucHJvdG90eXBlLmdldEVsZW1lbnRzID0gZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgdmFyIGVsZW0gPSB0aGlzLmVsZW07XG4gICAgLy8gVmlkZW8gcG9zdGVyIGltYWdlXG4gICAgZWxlbS5wb3N0ZXIgPSBlbGVtLnRhcmdldFdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdwb3N0ZXItb3V0ZXItY29udGFpbmVyJylbMF07XG4gICAgZWxlbS52aWRlb3NDb250YWluZXIgPSBlbGVtLnRhcmdldFdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndmlkZW9zLWNvbnRhaW5lcicpO1xuICAgIGVsZW0ub3ZlcmxheUNvbnRhaW5lciA9IGVsZW0udGFyZ2V0V2luZG93LmRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3ZkYi1wbGF5ZXItb3ZlcmxheS1jb250YWluZXInKVswXTtcbiAgICBlbGVtLkFvbEh0bWw1UGxheWVyID0gZWxlbS50YXJnZXRXaW5kb3cuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ0FvbEh0bWw1UGxheWVyJyk7XG4gICAgZWxlbS5yYXdWaWRlbyA9IChlbGVtLnZpZGVvc0NvbnRhaW5lciE9PW51bGwgPyBlbGVtLnZpZGVvc0NvbnRhaW5lci5maXJzdENoaWxkIDogZmFsc2UpO1xuICAgIGVsZW0udmRiQ29udGFpbmVyID0gdGhpcy5nZXRWZGJDb250YWluZXIoKTtcbiAgICBlbGVtLmFkSW5mb0JhciA9IGVsZW0udGFyZ2V0V2luZG93LmRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2FkLWluZm8tYmFyJylbMF07XG4gICAgZWxlbS5jb250cm9sQmFyID0gZWxlbS50YXJnZXRXaW5kb3cuZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnY29udHJvbC1iYXItY29udGFpbmVyJylbMF07XG4gIFxuICAgIHJldHVybiBlbGVtO1xuICB9XG4gIFxuICAvKlxuICAgKiAgQ2hlY2sgd2hlcmUgYWQgd2lsbCBiZSBkaXNwbGF5ZWRcbiAgICovXG4gIENhUGxhdGZvcm0uQmVPbi5wcm90b3R5cGUuZ2V0RGlzcGxheVR5cGUgPSBmdW5jdGlvbigpIHtcbiAgXG4gICAgdmFyIGFjY2Vzc0FsbG93ZWQgPSB0aGlzLmNhbkFjY2Vzc1BhcmVudElGcmFtZSgpO1xuICBcbiAgICAvKlxuICAgICAqIFZpZGVvIGFkIGRpc3BsYXllZCBpbiBpZnJhbWUsIHN1Y2ggYXNcbiAgICAgKiBpbmNlbnRpdmlzZWQgY2FtcGFpZ25zIG9uIEZ5YmVyLCBTdXBlcnNvbmljLFxuICAgICAqIGV0Yy5cbiAgICAgKi9cbiAgICBpZiAoIWFjY2Vzc0FsbG93ZWQpIHtcbiAgICAgIHJldHVybiAnd3JhcHBlZCc7XG4gICAgfVxuICBcbiAgICAvKlxuICAgICAqIElmIGFkIGlzIGJlaW5nIGRpcHNsYXllZCBhcyBPTkUgcHJldmlld1xuICAgICAqIHRoZW4gcmVuZGVyIGFzIGxpdmUgdGFnLlxuICAgICAqL1xuICAgIGlmICh3aW5kb3cucGFyZW50LnBhcmVudC5wYXJlbnQuJE9ORVByZXZpZXcpIHtcbiAgICAgIHJldHVybiAnc3RhbmRhcmQnO1xuICAgIH1cbiAgXG4gICAgaWYgKHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSA9PSAnb25lY3JlYXRpdmUuYW9sLmNvbScgfHwgd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lID09ICcnICkge1xuICAgICAgd2luZG93LnBhcmVudC4kT05FUHJldmlldyA9IHRydWU7XG4gICAgICByZXR1cm4gJ29uZXByZXZpZXcnO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gJ3N0YW5kYXJkJztcbiAgICB9XG4gIH1cbiAgXG4gIENhUGxhdGZvcm0uQmVPbi5wcm90b3R5cGUuY2FuQWNjZXNzUGFyZW50SUZyYW1lID0gZnVuY3Rpb24oKSB7XG4gICAgdHJ5IHtcbiAgICAgIHdpbmRvdy5wYXJlbnQucGFyZW50LnBhcmVudC4kT05FUHJldmlld1xuICAgIH0gY2F0Y2goZXJyb3IpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgXG4gIC8qXG4gICAqIEluaXRcbiAgICovXG4gIENhUGxhdGZvcm0uQmVPbi5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uKCkge1xuICBcbiAgICAvLyB2YXIgYWRUeXBlID0gdGhpcy5jb25maWdbJ2Rpc3BsYXlUeXBlJ107XG4gICAgdmFyIGFkVHlwZSA9IHRoaXMuZ2V0RGlzcGxheVR5cGUoKTtcbiAgXG4gICAgc3dpdGNoIChhZFR5cGUpIHtcbiAgICAgIGNhc2UgJ3N0YW5kYXJkJzpcbiAgICAgICAgdGhpcy5lbGVtLnBsYXllckNvbnRhaW5lciA9IHdpbmRvdy5wYXJlbnQuZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgndmRiX3BsYXllcicpWzBdO1xuICAgICAgICAvLyBWaWRpYmxlIG9iamVjdHNcbiAgICAgICAgdGhpcy5wbGF5ZXIgPSB0aGlzLnBsYXllciB8fCB0aGlzLmVsZW0ucGxheWVyQ29udGFpbmVyLnZkYl9QbGF5ZXI7XG4gICAgICAgIHRoaXMudmlkaWJsZSA9IHRoaXMudmlkaWJsZSB8fCB0aGlzLmVsZW0udG9wV2luLnZpZGlibGU7XG4gICAgICAgIC8vIEVsZW1lbnRzXG4gICAgICAgIHRoaXMuZWxlbSA9IHRoaXMuZ2V0RWxlbWVudHMoKTtcbiAgICAgICAgLy8gRmlyc3QsIGNoZWNrIGZvciB2aWRpYmxlIHZpZGVvIHdyYXBwZXJcbiAgICAgICAgdGhpcy5hc3BlY3RSYXRpbyA9IHBhcnNlRmxvYXQoKHRoaXMuZWxlbS52aWRlb3NDb250YWluZXIub2Zmc2V0V2lkdGggLyB0aGlzLmVsZW0udmlkZW9zQ29udGFpbmVyLm9mZnNldEhlaWdodCkudG9GaXhlZCg0KSk7XG4gICAgICAgIC8vIFJ1blxuICAgICAgICB0aGlzLmF0dGFjaFBsYXllckV2ZW50cygpO1xuICAgICAgICB0aGlzLmF0dGFjaE1ldGhvZHMoKTtcbiAgICAgICAgdGhpcy5kZWZhdWx0TGF5b3V0KCk7XG4gICAgICAgIHRoaXMuc2Nyb2xsRXZlbnQoKTtcbiAgICAgICAgdGhpcy5tb3VzZUV2ZW50cygpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3dyYXBwZWQnOlxuICAgICAgICB0aGlzLmVsZW0ucGxheWVyQ29udGFpbmVyID0gd2luZG93LnBhcmVudC5kb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCd2ZGJfcGxheWVyJylbMF07XG4gICAgICAgIC8vIFZpZGlibGUgb2JqZWN0c1xuICAgICAgICB0aGlzLnBsYXllciA9IHRoaXMucGxheWVyIHx8IHRoaXMuZWxlbS5wbGF5ZXJDb250YWluZXIudmRiX1BsYXllcjtcbiAgICAgICAgdGhpcy52aWRpYmxlID0gdGhpcy52aWRpYmxlIHx8IHRoaXMuZWxlbS50b3BXaW4udmlkaWJsZTtcbiAgICAgICAgLy8gRWxlbWVudHNcbiAgICAgICAgdGhpcy5lbGVtID0gdGhpcy5nZXRFbGVtZW50cygpO1xuICAgICAgICAvLyBGaXJzdCwgY2hlY2sgZm9yIHZpZGlibGUgdmlkZW8gd3JhcHBlclxuICAgICAgICB0aGlzLmFzcGVjdFJhdGlvID0gcGFyc2VGbG9hdCgodGhpcy5lbGVtLnZpZGVvc0NvbnRhaW5lci5vZmZzZXRXaWR0aCAvIHRoaXMuZWxlbS52aWRlb3NDb250YWluZXIub2Zmc2V0SGVpZ2h0KS50b0ZpeGVkKDQpKTtcbiAgICAgICAgLy8gUnVuXG4gICAgICAgIHRoaXMuYXR0YWNoUGxheWVyRXZlbnRzKCk7XG4gICAgICAgIHRoaXMuYXR0YWNoTWV0aG9kcygpO1xuICAgICAgICB0aGlzLmRlZmF1bHRMYXlvdXQoKTtcbiAgICAgICAgLy8gdGhpcy5zY3JvbGxFdmVudCgpO1xuICAgICAgICB0aGlzLm1vdXNlRXZlbnRzKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnb25lcHJldmlldyc6XG4gICAgICAgIC8qXG4gICAgICAgICAqIEJ1aWxkIHByZXZpZXcgcGxheWVyXG4gICAgICAgICAqIFRoaXMgYnVpbGRzIGEgdmlkaWJsZSBwbGF5ZXIgaW5zdGFuY2UsXG4gICAgICAgICAqIGFuZCBzZXRzIGEgcGVyc2lzdGVudCB2YXIgJE9ORXByZXZpZXcgPSB0cnVlXG4gICAgICAgICAqIFRoaXMgdGVsbHMgdGhlIGxpdmUgdGFnIHRvIHJ1biBhcyBub3JtYWwgKHN0YW5kYXJkKVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5QcmV2aWV3LnByb3RvdHlwZS5jb25maWcgPSB0aGlzLmNvbmZpZztcbiAgICAgICAgdGhpcy5QcmV2aWV3LnByb3RvdHlwZS5lbGVtID0gdGhpcy5lbGVtO1xuICAgICAgICB0aGlzLlByZXZpZXcucHJvdG90eXBlLmFkdmVydCA9IHRoaXMuYWR2ZXJ0O1xuICAgICAgICB0aGlzLlByZXZpZXcgPSBuZXcgdGhpcy5QcmV2aWV3KCk7XG4gICAgICAgIHdpbmRvdy4kT05FcHJldmlldyA9IHRydWU7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICBcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICBcbiAgLypcbiAgICogR2V0IHZpZGlibGUgd3JhcHBlclxuICAgKi9cbiAgQ2FQbGF0Zm9ybS5CZU9uLnByb3RvdHlwZS5nZXRWZGJDb250YWluZXIgPSBmdW5jdGlvbihwbGF5ZXJDb250YWluZXIpIHtcbiAgICBpZiAodHlwZW9mIHBsYXllckNvbnRhaW5lciA9PSAndW5kZWZpbmVkJykge1xuICAgICAgdmFyIHBsYXllckNvbnRhaW5lciA9IHdpbmRvdy5wYXJlbnQuZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgndmRiX3BsYXllcicpWzBdO1xuICAgIH1cbiAgICB2YXIgbm9kZXMgPSBwbGF5ZXJDb250YWluZXIuY2hpbGRyZW47XG4gICAgZm9yICh2YXIga2V5IGluIG5vZGVzKSB7XG4gICAgICBpZiAodHlwZW9mIG5vZGVzW2tleV0uaWQgPT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKG5vZGVzW2tleV0uaWQuaW5kZXhPZigndmRiXycpPT0wKSB7XG4gICAgICAgICAgcmV0dXJuIG5vZGVzW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBBZGQgcGxheWVyIGV2ZW50c1xuICAgKiBVc2UgdGhlc2UgdG8gYWRkIGNvcmUgZnVuY3Rpb25hbGl0eSB0byBwbGF5ZXIgZXZlbnRzXG4gICAqL1xuICBDYVBsYXRmb3JtLkJlT24ucHJvdG90eXBlLmF0dGFjaFBsYXllckV2ZW50cyA9IGZ1bmN0aW9uKGFkdmVydCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgdmFyIGV2ZW50cyA9IHt9O1xuICAgIGV2ZW50cy5WSURFT19TVEFSVCA9IGZ1bmN0aW9uKGUpIHtcbiAgICB9O1xuICAgIGV2ZW50cy5WSURFT19FTkQgPSBmdW5jdGlvbihlKSB7XG4gICAgICBfdGhpcy5lbGVtLnZpZGVvc0NvbnRhaW5lci5zdHlsZS5wb2ludGVyRXZlbnRzID0gJ25vbmUnO1xuICAgIH07XG4gICAgZXZlbnRzLlZJREVPX1BMQVkgPSBmdW5jdGlvbihlKSB7XG4gICAgICBfdGhpcy5lbGVtLnZpZGVvc0NvbnRhaW5lci5zdHlsZS5wb2ludGVyRXZlbnRzID0gJ2FsbCc7XG4gICAgfTtcbiAgICBldmVudHMuVklERU9fUEFVU0UgPSBmdW5jdGlvbihlKSB7XG4gICAgfTtcbiAgICBldmVudHMuVklERU9fU0VFS0VORCA9IGZ1bmN0aW9uKGUpIHtcbiAgICB9O1xuICAgIGV2ZW50cy5BRF9TVEFSVCA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgIF90aGlzLmVsZW0udmlkZW9zQ29udGFpbmVyLnN0eWxlLnBvaW50ZXJFdmVudHMgPSAnYWxsJztcbiAgICB9O1xuICAgIGV2ZW50cy5BRF9FTkQgPSBmdW5jdGlvbihlKSB7XG4gICAgICBfdGhpcy5lbGVtLnZpZGVvc0NvbnRhaW5lci5zdHlsZS5wb2ludGVyRXZlbnRzID0gJ25vbmUnO1xuICAgIH07XG4gICAgZXZlbnRzLkVOVEVSX0ZVTExTQ1JFRU4gPSBmdW5jdGlvbihlKSB7XG4gICAgICBfdGhpcy5mdWxsc2NyZWVuU3dpdGNoKCk7XG4gICAgfTtcbiAgICBldmVudHMuRVhJVF9GVUxMU0NSRUVOID0gZnVuY3Rpb24oZSkge1xuICAgICAgX3RoaXMuZnVsbHNjcmVlblN3aXRjaCgpO1xuICAgIH07XG4gICAgZm9yICh2YXIga2V5IGluIGV2ZW50cykge1xuICAgICAgdGhpcy50b29scy5ldmVudHMuYWRkRXZlbnQodGhpcy5wbGF5ZXIsIHRoaXMudmlkaWJsZVtrZXldLCBldmVudHNba2V5XSk7XG4gICAgfVxuICBcbiAgfTtcbiAgXG4gIC8qKlxuICAgKiBTY3JvbGwgZXZlbnRzIGRpc3BhdGNoZXJzXG4gICAqL1xuICBDYVBsYXRmb3JtLkJlT24ucHJvdG90eXBlLnNjcm9sbEV2ZW50ID0gZnVuY3Rpb24oKSB7XG4gICAgLy8gY29uc29sZS5sb2coJ3Njcm9sbEV2ZW50Jywgc2VsZi5jb25maWdbJ2Rpc3BsYXlUeXBlJ10pXG4gICAgdmFyIHNlbGYgPSB0aGlzOyAgXG4gICAgdmFyIGVsZW0gPSBzZWxmLmVsZW0ucGxheWVyQ29udGFpbmVyO1xuICAgIHZhciBpblZpZXcgPSBmYWxzZTtcbiAgICAvLyBTY3JvbGwgZXZlbnRzXG4gICAgdmFyIGxhc3Rfa25vd25fc2Nyb2xsX3Bvc2l0aW9uID0gMDtcbiAgICB2YXIgdGlja2luZyA9IGZhbHNlO1xuICAgIHdpbmRvdy5wYXJlbnQuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgZnVuY3Rpb24oZSkge1xuICAgICAgbGFzdF9rbm93bl9zY3JvbGxfcG9zaXRpb24gPSBzY3JvbGxQb3NpdGlvbigpO1xuICAgICAgaWYgKCF0aWNraW5nKSB7XG4gICAgICAgIHdpbmRvdy5wYXJlbnQucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGNoZWNrSWZJblZpZXcobGFzdF9rbm93bl9zY3JvbGxfcG9zaXRpb24pO1xuICAgICAgICAgIHRpY2tpbmcgPSBmYWxzZTtcbiAgICAgICAgICBzZWxmLmRpc3BhdGNoRXZlbnQoJ1NDUk9MTCcsIHtcbiAgICAgICAgICAgIHNjcm9sbFBvcyA6IGxhc3Rfa25vd25fc2Nyb2xsX3Bvc2l0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgdGlja2luZyA9IHRydWU7XG4gICAgfSk7XG4gICAgLypcbiAgICAgKiBSZXR1cm5zIHVzZXJzIGN1cnJlbnQgc2Nyb2xsIHBvc2l0aW9uIGluIHRoZSB2aWV3cG9ydFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHNjcm9sbFBvc2l0aW9uKCkge1xuICAgICAgcmV0dXJuIHdpbmRvdy5wYXJlbnQuc2Nyb2xsWTtcbiAgICB9XG4gICAgLypcbiAgICAgKiBDaGVjayBpZiBhZCB1bml0IGlzIGluIHZpZXdcbiAgICAgKiAoYWZ0ZXIgYWNjb3VudGluZyBmb3IgcGxheW1hcmdpbilcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjaGVja0lmSW5WaWV3KHNjcm9sbFBvcykge1xuICAgICAgLy8gU2l6ZSBvZiB2aWV3cG9ydCB3aW5kb3dcbiAgICAgIHZhciB3aW5TaXplID0gc2VsZi50b29scy5nZXRWaWV3cG9ydFNpemUod2luZG93LnRvcCk7XG4gICAgICAvLyBZIHBvc2l0aW9uIG9mIGFkIHVuaXQgaW4gdmlld3BvcnQgd2luZG93XG4gICAgICB2YXIgYWRQb3MgPSBlbGVtLm9mZnNldFRvcDtcbiAgICAgIC8vIEhlaWdodCBvZiBhZCB1bml0XG4gICAgICB2YXIgYWRIZWlnaHQgPSBlbGVtLm9mZnNldEhlaWdodDtcbiAgICAgIC8vIFRoZSBmcmFjdGlvbiBvZiB0aGUgdG90YWwgYWQgaGVpZ2h0IHRoYXQgbmVlZHNcbiAgICAgIC8vIHRvIGJlIHZpc2libGUgYmVmb3JlIGF1dG8gcGxheWJhY2tcbiAgICAgIHZhciBwbGF5TWFyZ2luID0gKGFkSGVpZ2h0LzIpO1xuICAgICAgLy8gU2Nyb2xsIHBvc2l0aW9uIGFmdGVyIFxuICAgICAgdmFyIHkgPSBzY3JvbGxQb3MgKyB3aW5TaXplLmg7XG4gICAgICAvLyBUaGUgZnJhY3Rpb24gb2YgdGhlIHRvdGFsIGFkIGhlaWdodCB0aGF0IG5lZWRzXG4gICAgICAvLyB0byBiZSB2aXNpYmxlIGJlZm9yZSBhdXRvIHBsYXliYWNrXG4gICAgICB2YXIgcGxheU1hcmdpbiA9IChhZEhlaWdodC8yKTtcbiAgICAgIC8vIGNvbnNvbGUubG9nKHksIGFkUG9zLCBwbGF5TWFyZ2luLCBzY3JvbGxQb3MsIGFkSGVpZ2h0KVxuICAgICAgLy8gaWYgKHBhZ2UgaXMgc2Nyb2xsZWQgdG8gdG9wIG9mIGFkICYmIHBhZ2UgaXMgbm90IHNjcm9sbGVkIHBhc3QgYWQpIFxuICAgICAgaWYgKCh5ID49IChhZFBvcytwbGF5TWFyZ2luKSkgJiYgIShzY3JvbGxQb3MgPiAoYWRQb3MrYWRIZWlnaHQtcGxheU1hcmdpbikpKSB7XG4gICAgICAgIGlmICghaW5WaWV3KSB7XG4gICAgICAgICAgaW5WaWV3ID0gdHJ1ZTtcbiAgICAgICAgICAvLyBEaXNwYXRjaCBldmVudFxuICAgICAgICAgIHNlbGYuZGlzcGF0Y2hFdmVudCgnSU5WSUVXJywge30pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoaW5WaWV3KSB7XG4gICAgICAgICAgaW5WaWV3ID0gZmFsc2U7XG4gICAgICAgICAgLy8gRGlzcGF0Y2ggZXZlbnRcbiAgICAgICAgICBzZWxmLmRpc3BhdGNoRXZlbnQoJ09VVFZJRVcnLCB7fSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgLy8gVGltZW91dCB1c2VkIHRvIG1ha2Ugc3VyZSBzY3JpcHQgbGlzdGVuZXJzIGFyZSByZWFkeVxuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAvLyBSdW4gb24gcGFnZSBsb2FkXG4gICAgICBsYXN0X2tub3duX3Njcm9sbF9wb3NpdGlvbiA9IHNjcm9sbFBvc2l0aW9uKCk7XG4gICAgICBjaGVja0lmSW5WaWV3KGxhc3Rfa25vd25fc2Nyb2xsX3Bvc2l0aW9uKTsgICAgXG4gICAgfSwgMjAwKVxuICB9XG4gIFxuICAvKipcbiAgICogTW91c2UgRXZlbnRzXG4gICAqL1xuICBDYVBsYXRmb3JtLkJlT24ucHJvdG90eXBlLm1vdXNlRXZlbnRzID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHZhciBlbGVtID0gdGhpcy5lbGVtLnBsYXllckNvbnRhaW5lcjtcbiAgICBlbGVtLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZW50ZXInLCBmdW5jdGlvbihlKSB7XG4gICAgICBzZWxmLmRpc3BhdGNoRXZlbnQoJ01PVVNFRU5URVInLCB7fSk7XG4gICAgfSk7XG4gICAgZWxlbS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgZnVuY3Rpb24oZSkge1xuICAgICAgc2VsZi5kaXNwYXRjaEV2ZW50KCdNT1VTRUxFQVZFJywge30pO1xuICAgIH0pO1xuICB9XG4gIFxuICAvKipcbiAgICogRXZlbnQgZGlzcGF0Y2hlclxuICAgKi9cbiAgQ2FQbGF0Zm9ybS5CZU9uLnByb3RvdHlwZS5kaXNwYXRjaEV2ZW50ID0gZnVuY3Rpb24oZXZlbnROYW1lLCBldmVudERhdGEpIHtcbiAgICB2YXIgcmljaE1lZGlhRXZlbnQgPSBuZXcgdGhpcy5kYXRhLnJpY2hNZWRpYUV2ZW50KCdWSURJQkxFXycrZXZlbnROYW1lKTtcbiAgICByaWNoTWVkaWFFdmVudC5tZXRhID0gZXZlbnREYXRhO1xuICAgIHRoaXMuYWR2ZXJ0LmV2ZW50QnVzLmRpc3BhdGNoRXZlbnQocmljaE1lZGlhRXZlbnQpO1xuICB9XG4gIFxuICAvKipcbiAgICogRnVsbHNjcmVlbiBzd2l0Y2hcbiAgICovXG4gIENhUGxhdGZvcm0uQmVPbi5wcm90b3R5cGUuZnVsbHNjcmVlblN3aXRjaCA9IGZ1bmN0aW9uKCkge1xuICBcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgIHRoaXMuaXNGdWxsc2NyZWVuIF49IHRydWU7IC8vIHRydWUvZmFsc2Ugc3dpdGNoXG4gIFxuICAgIGlmICh0aGlzLmlzRnVsbHNjcmVlbikge1xuICBcbiAgICAgIC8vIEZ1bGxzY3JlZW4gcmVzZXRcbiAgICAgIHRoaXMuZWxlbS5Bb2xIdG1sNVBsYXllci5zdHlsZS5oZWlnaHQgPSAnMTAwJSc7XG4gICAgICB0aGlzLmVsZW0udmRiQ29udGFpbmVyLnN0eWxlLnBhZGRpbmdCb3R0b20gPSAnMTAwJSc7XG4gICAgICB0aGlzLmVsZW0ub3ZlcmxheUNvbnRhaW5lci5zdHlsZS5oZWlnaHQgPSAnMTAwJSc7XG4gICAgICB0aGlzLmVsZW0uYWRDb250YWluZXIuc3R5bGUuaGVpZ2h0ID0gJzEwMCUnO1xuICAgICAgdGhpcy5lbGVtLm92ZXJsYXlDb250YWluZXIuc3R5bGUuaGVpZ2h0ID0gJzEwMCUnO1xuICBcbiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIF90aGlzLmVsZW0uQW9sSHRtbDVQbGF5ZXIuc3R5bGUuaGVpZ2h0ID0gJzEwMCUnO1xuICAgICAgfSwgMSlcbiAgXG4gICAgfSBlbHNlIHtcbiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIF90aGlzLmxheW91dChfdGhpcy5zaXppbmcpXG4gICAgICB9LCAxKVxuICAgIH1cbiAgXG4gIH1cbiAgXG4gIC8qKlxuICAgKiBBdHRhY2ggbWV0aG9kc1xuICAgKi9cbiAgQ2FQbGF0Zm9ybS5CZU9uLnByb3RvdHlwZS5hdHRhY2hNZXRob2RzID0gZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICBcbiAgICAvLyBDcmVhdGUgQ1NTIG1vZHVsZVxuICAgIHZhciB0YXJnZXRXaW5kb3cgPSB0aGlzLmVsZW0udGFyZ2V0V2luZG93O1xuICAgIHZhciBjc3MgPSAnLnBvc3Rlci1vdXRlci1jb250YWluZXIgeyBvcGFjaXR5OjAuNTsgfScsXG4gICAgICAgIGhlYWQgPSB0YXJnZXRXaW5kb3cuZG9jdW1lbnQuaGVhZCB8fCB0YXJnZXRXaW5kb3cuZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXSxcbiAgICAgICAgc3R5bGUgPSB0YXJnZXRXaW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgICAgICAgc3R5bGUudHlwZSA9ICd0ZXh0L2Nzcyc7XG4gIFxuICAgIC8vIEhpZGUgcG9zdGVyXG4gICAgc2VsZi50b29scy5ldmVudHMuYWRkRXZlbnQoc2VsZi5hZHZlcnQuZXZlbnRCdXMsICdWSURJQkxFX0ZJUkVfSElERV9QT1NURVInLCBmdW5jdGlvbihlKSB7XG4gICAgICB2YXIgY3NzID0gJy5wb3N0ZXItb3V0ZXItY29udGFpbmVyIHsgZGlzcGxheTpub25lOyB9JztcbiAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICAgICAgaGVhZC5hcHBlbmRDaGlsZChzdHlsZSk7XG4gICAgfSk7XG4gIFxuICAgIC8vIFNob3cgcG9zdGVyXG4gICAgc2VsZi50b29scy5ldmVudHMuYWRkRXZlbnQoc2VsZi5hZHZlcnQuZXZlbnRCdXMsICdWSURJQkxFX0ZJUkVfU0hPV19QT1NURVInLCBmdW5jdGlvbihlKSB7XG4gICAgICB2YXIgY3NzID0gJy5wb3N0ZXItb3V0ZXItY29udGFpbmVyIHsgZGlzcGxheTpibG9jazsgfSc7XG4gICAgICBzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgICAgIGhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuICAgIH0pO1xuICBcbiAgICAvLyBMYXlvdXRcbiAgICBzZWxmLnRvb2xzLmV2ZW50cy5hZGRFdmVudChzZWxmLmFkdmVydC5ldmVudEJ1cywgJ1ZJRElCTEVfRklSRV9MQVlPVVQnLCBmdW5jdGlvbihlKSB7XG4gICAgICBzZWxmLmxheW91dChlLm1ldGEpO1xuICAgIH0pO1xuICBcbiAgICAvLyBIaWRlIGNvbnRyb2wgYmFyXG4gICAgc2VsZi50b29scy5ldmVudHMuYWRkRXZlbnQoc2VsZi5hZHZlcnQuZXZlbnRCdXMsICdWSURJQkxFX0ZJUkVfSElERV9DT05UUk9MJywgZnVuY3Rpb24oZSkge1xuICAgICAgc2VsZi5lbGVtLmNvbnRyb2xCYXIuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICB9KTtcbiAgXG4gICAgLy8gU2hvdyBjb250cm9sIGJhclxuICAgIHNlbGYudG9vbHMuZXZlbnRzLmFkZEV2ZW50KHNlbGYuYWR2ZXJ0LmV2ZW50QnVzLCAnVklESUJMRV9GSVJFX1NIT1dfQ09OVFJPTCcsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIHNlbGYuZWxlbS5jb250cm9sQmFyLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgIH0pO1xuICBcbiAgICAvLyBQbGF5XG4gICAgc2VsZi50b29scy5ldmVudHMuYWRkRXZlbnQoc2VsZi5hZHZlcnQuZXZlbnRCdXMsICdWSURJQkxFX0ZJUkVfUExBWScsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIHNlbGYucGxheWVyLnBsYXkoKTtcbiAgICB9KTtcbiAgXG4gICAgLy8gUGF1c2VcbiAgICBzZWxmLnRvb2xzLmV2ZW50cy5hZGRFdmVudChzZWxmLmFkdmVydC5ldmVudEJ1cywgJ1ZJRElCTEVfRklSRV9QQVVTRScsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIHNlbGYucGxheWVyLnBhdXNlKCk7XG4gICAgfSk7XG4gIFxuICAgIC8vIFNlZWtcbiAgICBzZWxmLnRvb2xzLmV2ZW50cy5hZGRFdmVudChzZWxmLmFkdmVydC5ldmVudEJ1cywgJ1ZJRElCTEVfRklSRV9TRUVLJywgZnVuY3Rpb24oZSkge1xuICAgICAgc2VsZi5wbGF5ZXIuc2Vla1RvKGUubWV0YSk7XG4gICAgfSk7XG4gIFxuICAgIC8vIEhpZGUgaW5mbyBiYXJcbiAgICBzZWxmLnRvb2xzLmV2ZW50cy5hZGRFdmVudChzZWxmLmFkdmVydC5ldmVudEJ1cywgJ1ZJRElCTEVfRklSRV9ISURFX0lORk9CQVInLCBmdW5jdGlvbihlKSB7XG4gICAgICBzZWxmLmhpZGVJbmZvQmFyKCk7XG4gICAgfSk7XG4gIFxuICAgIC8vIEZpcmUgdm9sdW1lIG1vZGlmaWVyXG4gICAgc2VsZi50b29scy5ldmVudHMuYWRkRXZlbnQoc2VsZi5hZHZlcnQuZXZlbnRCdXMsICdWSURJQkxFX0ZJUkVfVk9MVU1FJywgZnVuY3Rpb24oZSkge1xuICAgICAgc2VsZi5wbGF5ZXIudm9sdW1lKGUubWV0YSlcbiAgICB9KTtcbiAgXG4gICAgLy8gRmlyZSB2b2x1bWUgbXV0ZVxuICAgIHNlbGYudG9vbHMuZXZlbnRzLmFkZEV2ZW50KHNlbGYuYWR2ZXJ0LmV2ZW50QnVzLCAnVklESUJMRV9GSVJFX01VVEUnLCBmdW5jdGlvbihlKSB7XG4gICAgICBzZWxmLnBsYXllci52b2x1bWUoMCk7XG4gICAgfSk7XG4gIFxuICAgIC8vIEZpcmUgdm9sdW1lIHVubXV0ZVxuICAgIHNlbGYudG9vbHMuZXZlbnRzLmFkZEV2ZW50KHNlbGYuYWR2ZXJ0LmV2ZW50QnVzLCAnVklESUJMRV9GSVJFX1VOTVVURScsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIHNlbGYucGxheWVyLnZvbHVtZSgxMDApO1xuICAgIH0pO1xuICBcbiAgfVxuICBcbiAgLyoqXG4gICAqIEhpZGUgaW5mbyBiYXJcbiAgICovXG4gIENhUGxhdGZvcm0uQmVPbi5wcm90b3R5cGUuaGlkZUluZm9CYXIgPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLmVsZW0uYWRJbmZvQmFyLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBEZWZhdWx0IGxheW91dFxuICAgKi9cbiAgQ2FQbGF0Zm9ybS5CZU9uLnByb3RvdHlwZS5kZWZhdWx0TGF5b3V0ID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5lbGVtLm92ZXJsYXlDb250YWluZXIuc3R5bGUucG9pbnRlckV2ZW50cyA9ICdhbGwnO1xuICAgIHRoaXMuZWxlbS5vdmVybGF5Q29udGFpbmVyLnN0eWxlLm92ZXJmbG93ID0gJ2hpZGRlbic7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBMYXlvdXRcbiAgICovXG4gIENhUGxhdGZvcm0uQmVPbi5wcm90b3R5cGUubGF5b3V0ID0gZnVuY3Rpb24oc2l6aW5nKSB7XG4gIFxuICAgIHRoaXMuc2l6aW5nID0gc2l6aW5nO1xuICBcbiAgICAvLyBFdmVudCBkYXRhXG4gICAgdmFyIGRhdGEgPSBzaXppbmc7XG4gICAgLy8gRWxlbWVudHNcbiAgICB2YXIgZWxlbSA9IHRoaXMuZWxlbTtcbiAgICAvLyBWaWRlbyBjb250YWluZXIgYXNwZWN0IHJhdGlvXG4gICAgdmFyIGFzcGVjdFJhdGlvID0gdGhpcy5hc3BlY3RSYXRpbztcbiAgICBcbiAgICBmdW5jdGlvbiBwZXJjZW50T3JQaXhlbHModmFsKSB7XG4gICAgICBpZiAodmFsLnRvU3RyaW5nKCkuaW5kZXhPZignJScpIT09LTEpIHtcbiAgICAgICAgcmV0dXJuICdwZXJjZW50JztcbiAgICAgIH0gZWxzZSBpZiAodmFsLnRvU3RyaW5nKCkuaW5kZXhPZigncHgnKSE9PS0xKSB7XG4gICAgICAgIHJldHVybiAncGl4ZWxzJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiAnaW50ZWdlcic7XG4gICAgICB9XG4gICAgfTtcbiAgXG4gICAgZnVuY3Rpb24gY2FsY3VsYXRlKHZhbCwgc2l6ZSkge1xuICAgICAgdmFyIHVuaXQgPSBwZXJjZW50T3JQaXhlbHModmFsKTtcbiAgICAgIHN3aXRjaCAodW5pdCkge1xuICAgICAgICBjYXNlICdpbnRlZ2VyJzpcbiAgICAgICAgICB2YWwgPSB2YWw7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ3BpeGVscyc6XG4gICAgICAgICAgdmFsID0gdmFsLnJlcGxhY2UoJ3B4JywgJycpO1xuICAgICAgICAgIHZhbCA9IHZhbDtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAncGVyY2VudCc6XG4gICAgICAgICAgdmFsID0gdmFsLnJlcGxhY2UoJyUnLCAnJyk7XG4gICAgICAgICAgdmFsID0gKHZhbCAqIChzaXplLzEwMCkpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHZhbCA9IGZhbHNlO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHZhbCA9IHBhcnNlSW50KHZhbCwgMTApO1xuICAgIH07XG4gIFxuICAgIC8vIE9yaWdpbmFsIHZpZGVvIHdpZHRoXG4gICAgdmFyIHZpZGVvV2lkdGggPSBjYWxjdWxhdGUoJzEwMCUnLCB0aGlzLmVsZW0udmlkZW9zQ29udGFpbmVyLm9mZnNldFdpZHRoKTtcbiAgICAvLyBDYWxjdWxhdGUgaGVpZ2h0IGZyb20gd2lkdGggLyB2aWRlbyBhc3BlY3QgcmF0aW9cbiAgICB2YXIgdmlkZW9IZWlnaHQgPSB2aWRlb1dpZHRoIC8gYXNwZWN0UmF0aW87XG4gIFxuICAgIC8vIENhbGN1bGF0ZWQgZGltZW5zaW9uc1xuICAgIHZhciB3aWR0aCA9IGNhbGN1bGF0ZShzaXppbmcuaGVpZ2h0LCB0aGlzLmVsZW0udmlkZW9zQ29udGFpbmVyLm9mZnNldFdpZHRoKTtcbiAgICB2YXIgaGVpZ2h0ID0gY2FsY3VsYXRlKHNpemluZy5oZWlnaHQsIHZpZGVvSGVpZ2h0KTtcbiAgICB2YXIgcGFkZGluZ1RvcCA9IGNhbGN1bGF0ZShzaXppbmcucGFkZGluZ1RvcCwgdmlkZW9IZWlnaHQpO1xuICAgIHZhciBwYWRkaW5nQm90dG9tID0gY2FsY3VsYXRlKHNpemluZy5wYWRkaW5nQm90dG9tLCB0aGlzLmVsZW0udmlkZW9zQ29udGFpbmVyLm9mZnNldEhlaWdodCk7XG4gICAgdmFyIHRvdGFsSGVpZ2h0ID0gdmlkZW9IZWlnaHQgKyBwYWRkaW5nVG9wICsgcGFkZGluZ0JvdHRvbTtcbiAgXG4gICAgdGhpcy5lbGVtLnRhcmdldFdpbmRvdy5kb2N1bWVudC5ib2R5LnN0eWxlLnBhZGRpbmdUb3AgPSBwYWRkaW5nVG9wICsgJ3B4JztcbiAgXG4gICAgLy8gQWN0dWFsIHZpZGVvXG4gICAgdGhpcy5lbGVtLkFvbEh0bWw1UGxheWVyLnN0eWxlLmhlaWdodCA9IHZpZGVvSGVpZ2h0ICsgJ3B4JztcbiAgXG4gICAgLy8gVmlkaWJsZSB3cmFwcGVyc1xuICAgIHRoaXMuZWxlbS52ZGJDb250YWluZXIuc3R5bGUuaGVpZ2h0ID0gXCJhdXRvXCI7XG4gICAgdGhpcy5lbGVtLnZkYkNvbnRhaW5lci5zdHlsZS5wYWRkaW5nQm90dG9tID0gdmlkZW9IZWlnaHQgKyBwYWRkaW5nVG9wICsgcGFkZGluZ0JvdHRvbSArICdweCc7XG4gICAgdGhpcy5lbGVtLm92ZXJsYXlDb250YWluZXIuc3R5bGUuaGVpZ2h0ID0gJzEwMCUnO1xuICBcbiAgICAvLyBBZHRlY2ggd3JhcHBlcnNcbiAgICB0aGlzLmVsZW0uYWRDb250YWluZXIuc3R5bGUuaGVpZ2h0ID0gJzEwMCUnO1xuICAgIHRoaXMuZWxlbS50YXJnZXRXaW5kb3cuZG9jdW1lbnQuYm9keS5zdHlsZS5ib3hTaXppbmcgPSAnYm9yZGVyLWJveCc7XG4gICAgXG4gICAgdGhpcy5lbGVtLnRhcmdldFdpbmRvdy5kb2N1bWVudC5ib2R5LnN0eWxlLnBhZGRpbmdCb3R0b20gPSBwYWRkaW5nQm90dG9tICsgJ3B4JztcbiAgICB0aGlzLmVsZW0ub3ZlcmxheUNvbnRhaW5lci5zdHlsZS5wb3NpdGlvbiA9ICdmaXhlZCc7XG4gIFxuICAgIHRoaXMuZWxlbS5hZENvbnRhaW5lci5zdHlsZS53aWR0aCA9ICcxMDAlJztcbiAgICB0aGlzLmVsZW0uYWRDb250ZW50LnN0eWxlLmhlaWdodCA9ICcxMDAlJztcbiAgICB0aGlzLmVsZW0uYWRDb250ZW50LnN0eWxlLndpZHRoID0gJzEwMCUnO1xuICAgIHRoaXMuZWxlbS5hZElmcmFtZS5zdHlsZS5oZWlnaHQgPSAnMTAwJSc7XG4gICAgdGhpcy5lbGVtLmFkSWZyYW1lLnN0eWxlLndpZHRoID0gJzEwMCUnO1xuICBcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICBcbiAgLypcbiAgICogQmVPbiBQcmV2aWV3IENsYXNzXG4gICAqIFRoaXMgY2xhc3MgaXMgdXNlZCB0byBjcmVhdGUgYSB2aWRpYmxlIHByZXZpZXcgcGxheWVyXG4gICAqIGFuZCBpbnNlcnQgYSBmbGlnaHQgdGFnIHdoZW4gdGhlIHBsYXllciBpcyByZWFkeS5cbiAgICovXG4gIENhUGxhdGZvcm0uQmVPbi5wcm90b3R5cGUuUHJldmlldyA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMucmVuZGVyVmlkaWJsZUlmcmFtZSgpO1xuICB9XG4gIFxuICB2YXIgUHJldmlldyA9IENhUGxhdGZvcm0uQmVPbi5wcm90b3R5cGUuUHJldmlldztcbiAgXG4gIC8qXG4gICAqIFxuICAgKi9cbiAgUHJldmlldy5wcm90b3R5cGUuZ2V0T25lUHJldmlld1dyYXBwZXIgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQuYm9keS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdhZFBvcycpWzBdO1xuICB9XG4gIFxuICAvKlxuICAgKiBcbiAgICovXG4gIFByZXZpZXcucHJvdG90eXBlLmFwcGx5UHJldmlld1dyYXBwZXJTdHlsZSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciB3cmFwcGVycyA9IHtcbiAgICAgIHByZXZpZXdXcmFwcGVySWQgOiAncHJldmlldy0nK3RoaXMuYWR2ZXJ0LmNhbnZhc0lkLFxuICAgICAgYWRDb250ZW50SWQgOiAnYWRDb250ZW50LScrdGhpcy5hZHZlcnQuY2FudmFzSWQsXG4gICAgICBhZFBvc0lkIDogJ2FkUG9zLScrdGhpcy5hZHZlcnQuY2FudmFzSWRcbiAgICB9XG4gICAgLy8gQXBwbHkgZ2VuZXJpYyBzdHlsZXNcbiAgICBmb3IgKHZhciBrZXkgaW4gd3JhcHBlcnMpIHtcbiAgICAgIHdyYXBwZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh3cmFwcGVyc1trZXldKTtcbiAgICAgIHdyYXBwZXIuc3R5bGUuaGVpZ2h0ID0gJzEwMCUnO1xuICAgICAgd3JhcHBlci5zdHlsZS5vdmVyZmxvdyA9ICdoaWRkZW4nO1xuICAgIH1cbiAgfVxuICBcbiAgLypcbiAgICogXG4gICAqL1xuICBQcmV2aWV3LnByb3RvdHlwZS5yZW5kZXJWaWRpYmxlSWZyYW1lID0gZnVuY3Rpb24oKSB7XG4gIFxuICAgIHZhciBzZWxmID0gdGhpcztcbiAgXG4gICAgLy8gR2V0IE9ORSBwcmV2aWV3IHNsb3RcbiAgICB0aGlzLmVsZW0ub25lUHJldmlld0FkU2xvdCA9IHRoaXMuZ2V0T25lUHJldmlld1dyYXBwZXIoKTtcbiAgICAvLyBHZXQgUk1MaWIgKyBjdXN0b21BZCBhcnJheSAoaW4gcHJldmlldyB0aGlzIGlzIGlubGluZSlcbiAgICAvLyB0aGlzLmJ1aWxkUHJldmlld0N1c3RvbUFkKCk7XG4gICAgdGhpcy5yZW1vdmVPbmVQcmV2aWV3KCk7XG4gIFxuICAgIC8vIENyZWF0ZSB0b3AtbGV2ZWwgaWZyYW1lXG4gICAgdmFyIGlmcmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lmcmFtZScpO1xuICAgIGlmcmFtZS5zdHlsZS5wb3NpdGlvbiA9ICdyZWxhdGl2ZSc7XG4gICAgaWZyYW1lLnN0eWxlLnRvcCA9IDA7XG4gICAgaWZyYW1lLnN0eWxlLmxlZnQgPSAwO1xuICAgIGlmcmFtZS5zdHlsZS53aWR0aCA9ICc2NDBweCc7XG4gICAgaWZyYW1lLnN0eWxlLmhlaWdodCA9ICcxMDAlJztcbiAgICBpZnJhbWUuc3R5bGUuYm9yZGVyID0gMDtcbiAgXG4gICAgLy8gQWRkIGlmcmFtZVxuICAgIHRoaXMuZWxlbS5vbmVQcmV2aWV3QWRTbG90LmFwcGVuZENoaWxkKGlmcmFtZSk7XG4gIFxuICAgIC8vIENyZWF0ZSBWaWRpYmxlIHdyYXBwZXJcbiAgICB2YXIgdmRiV3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHZkYldyYXBwZXIuaWQgPSB0aGlzLmNvbmZpZ1sndmRiUGlkJ107XG4gICAgdmRiV3JhcHBlci5jbGFzc05hbWUgPSAndmRiX3BsYXllciB2ZGJfJyt0aGlzLmNvbmZpZ1sndmRiUGlkJ10rdGhpcy5jb25maWdbJ3ZkYkJjaWQnXTtcbiAgICB0aGlzLmVsZW0ucGxheWVyQ29udGFpbmVyID0gdmRiV3JhcHBlcjtcbiAgXG4gICAgLy8gQ3JlYXRlIFZpZGlibGUgcGxheWVyIHNjcmlwdFxuICAgIHZhciB2ZGJTY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcbiAgICB2ZGJTY3JpcHQuc3JjID0gJy8vZGVsaXZlcnkudmlkaWJsZS50di9qc29ucC9waWQ9Jyt0aGlzLmNvbmZpZ1sndmRiUGlkJ10rJy8nK3RoaXMuY29uZmlnWyd2ZGJCY2lkJ10rJy5qcyc7XG4gIFxuICAgIC8vIEFkZCB2aWRpYmxlIHNjcmlwdFxuICAgIHZkYldyYXBwZXIuYXBwZW5kQ2hpbGQodmRiU2NyaXB0KTtcbiAgICAvLyBBZGQgdmlkaWJsZSB3cmFwcGVyXG4gICAgaWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh2ZGJXcmFwcGVyKTtcbiAgXG4gICAgLy8gU3RyZXRjaCB0byBmaWxsIHByZXZpZXcgY29udGFpbmVyXG4gICAgdGhpcy5hcHBseVByZXZpZXdXcmFwcGVyU3R5bGUoKTtcbiAgXG4gICAgLypcbiAgICAgKiBSZWFkeSB3aGVuIHByZXZpZXcgdmlkaWJsZSBwbGF5ZXIgaGFzIHJlbmRlcmVkLlxuICAgICAqIFdlIGhhdmUgdG8gcGFzcyBpZnJhbWUgaGVyZSBpbnN0ZWFkIG9mIHZpZGlibGVcbiAgICAgKiBvYmplY3QgYXMgcGxheWVyIGlzbid0IHJlYWR5IHlldC5cbiAgICAgKi9cbiAgICB0aGlzLnBsYXllclJlYWR5KGlmcmFtZSwgdmRiV3JhcHBlciwgZnVuY3Rpb24odGFyZ2V0KSB7XG4gIFxuICAgICAgLy8gVE9ETzogU2VydmUgbGl2ZSBhZCBwcmV2aWV3XG4gICAgICBcbiAgICAgIC8vIEZsaWdodGVkIHByZXZpZXcgdXNpbmcgY3VzdG9tQWQgVVJMXG4gICAgICB2YXIgYWRkeW5TcmMgPSBzZWxmLmNvbmZpZ1snYWRkeW5TcmMnXTtcbiAgICAgIHZhciBzY3JpcHQgPSAnPHNjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCIgYXN5bmM9XCJcIiBzcmM9XCInK2FkZHluU3JjKydcIj48L3NjcmlwdD4nO1xuICAgICAgdmFyIGN1c3RvbUFkUHJldmlldyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lmcmFtZScpO1xuICAgICAgICAgIGN1c3RvbUFkUHJldmlldy5zcmMgPSAnYWJvdXQ6YmxhbmsnO1xuICAgICAgY3VzdG9tQWRQcmV2aWV3LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICBjdXN0b21BZFByZXZpZXcub25sb2FkID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIEhhcmQtY29kZWQgbGlua1xuICAgICAgICBjdXN0b21BZFByZXZpZXcuY29udGVudFdpbmRvdy5kb2N1bWVudC53cml0ZShzY3JpcHQpO1xuICAgICAgfTtcbiAgICAgIGN1c3RvbUFkUHJldmlldy5zcmMgPSAnYWJvdXQ6YmxhbmsnO1xuICAgICAgdGFyZ2V0LmFwcGVuZENoaWxkKGN1c3RvbUFkUHJldmlldyk7XG4gIFxuICAgIH0pXG4gIFxuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIFxuICAvKlxuICAgKiBDYWxsYmFjayB3aGVuIHBsYXllciBpcyByZWFkeVxuICAgKi9cbiAgUHJldmlldy5wcm90b3R5cGUucGxheWVyUmVhZHkgPSBmdW5jdGlvbihpZnJhbWUsIHZkYldyYXBwZXIsIGNhbGxiYWNrKSB7XG4gIFxuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICBcbiAgICAvLyBJbnNlcnQgc2NyaXB0IGhlcmVcbiAgICB2YXIgaW5zZXJ0ID0gdmRiV3JhcHBlcjtcbiAgXG4gICAgLy8gUmVhZHkgZnVuY3Rpb25cbiAgICAoZnVuY3Rpb24oZGl2LCBjYil7XG4gICAgICBpZiAoZGl2LnZkYl9QbGF5ZXIpIHtcbiAgICAgICAgY2IoZGl2LnZkYl9QbGF5ZXIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIGZuID0gYXJndW1lbnRzLmNhbGxlZTtcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpeyBmbihkaXYsY2IpOyB9LCAxKTtcbiAgICAgIH1cbiAgICB9KShpbnNlcnQsIG9uUGxheWVyUmVhZHkpO1xuICBcbiAgICAvLyBQbGF5ZXIgcmVhZHlcbiAgICBmdW5jdGlvbiBvblBsYXllclJlYWR5KHBsYXllcikge1xuICAgICAgLy8gdmlkaWJsZSBvYmplY3QgaXMgbm93IGF2YWlsYWJsZVxuICAgICAgdmFyIHZpZGlibGUgPSBpZnJhbWUuY29udGVudFdpbmRvdy52aWRpYmxlO1xuICAgICAgdmFyIGNoaWxkcmVuID0gdmRiV3JhcHBlci5jaGlsZHJlbjtcbiAgICAgIHZhciB0YXJnZXQ7XG4gICAgICBmb3IgKHZhciBrZXkgaW4gY2hpbGRyZW4pIHtcbiAgICAgICAgaWYgKHR5cGVvZiBjaGlsZHJlbltrZXldLmlkID09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgaWYgKGNoaWxkcmVuW2tleV0uaWQuaW5kZXhPZigndmRiXycpPT0wKSB7XG4gICAgICAgICAgICB0YXJnZXQgPSBjaGlsZHJlbltrZXldO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcbiAgXG4gICAgICAvLyBGaXJlIGNhbGxiYWNrIHdoZW4gcmVhZHlcbiAgICAgIHBsYXllci5hZGRFdmVudExpc3RlbmVyKHZpZGlibGVbJ1BMQVlFUl9SRUFEWSddLCBmdW5jdGlvbihlKSB7XG4gICAgICAgIGNhbGxiYWNrKHRhcmdldCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbiAgXG4gIC8qXG4gICAqIFJlbW92ZSBPTkUgcHJldmlldyB3cmFwcGVyXG4gICAqL1xuICBQcmV2aWV3LnByb3RvdHlwZS5yZW1vdmVPbmVQcmV2aWV3ID0gZnVuY3Rpb24oKSB7XG4gIFxuICAgIHZhciBhbmNob3JEaXYgPSB0aGlzLmFkdmVydC5hc3NldENvbnRhaW5lcnMubWFpbi5hbmNob3JEaXY7XG4gICAgYW5jaG9yRGl2LnJlbW92ZSgpO1xuICBcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICBcbiAgLyoqXG4gICAqIEV2ZW50cyBsaXN0XG4gICAqL1xuICBjdXN0b21BZC5wcm90b3R5cGUuY3JlYXRlRXZlbnRzID0gZnVuY3Rpb24oYWR2ZXJ0KSB7XG4gICAgXG4gICAgLy8gQWR0ZWNoIGV2ZW50c1xuICAgIEFEVEVDSC5ldmVudCgnQURURUNIX1JFU0laRScpO1xuICAgIEFEVEVDSC5ldmVudCgnQURURUNIX01BU0snKTtcbiAgXG4gICAgLy8gQWR0ZWNoIG1ldGhvZHMgXG4gICAgQURURUNILmV2ZW50KCdGSVJFX0FEVEVDSF9TRU5EX01FVEEnKTtcbiAgICBBRFRFQ0guZXZlbnQoJ0ZJUkVfQURURUNIX0NPTkZJRycpO1xuICAgIEFEVEVDSC5ldmVudCgnRklSRV9BRFRFQ0hfTEFZT1VUJyk7XG4gICAgQURURUNILmV2ZW50KCdGSVJFX0FEVEVDSF9BRERfV1JBUFBFUl9BTklNQVRJT04nKTtcbiAgICBBRFRFQ0guZXZlbnQoJ0ZJUkVfQURURUNIX1JFTU9WRV9XUkFQUEVSX0FOSU1BVElPTicpO1xuICBcbiAgfTtcbiAgXG4gIC8qKlxuICAgKiBwcmVJbml0IE1ldGhvZFxuICAgKi9cbiAgY3VzdG9tQWQucHJvdG90eXBlLnByZUluaXQgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAod2luZG93PT1udWxsKSByZXR1cm47XG4gICAgd2luZG93LmNvbSA9IGNvbSB8fCB7fTtcbiAgICBjb20uYWR0ZWNoID0gd2luZG93LmNvbS5hZHRlY2g7XG4gIH07XG4gIFxuICAvKipcbiAgICogSW5pdCBjdXN0b21BZFxuICAgKi9cbiAgY3VzdG9tQWQucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbihhZHZlcnQpIHtcbiAgICBcbiAgICB0aGlzLmRhdGEgPSB7fTtcbiAgICB0aGlzLmFkdmVydCA9IGFkdmVydDtcbiAgXG4gICAgdGhpcy5lbGVtLmFkQ29udGFpbmVyID0gYWR2ZXJ0LmFzc2V0Q29udGFpbmVycy5tYWluLmFuY2hvckRpdjtcbiAgICB0aGlzLmVsZW0uYWRDb250ZW50ID0gYWR2ZXJ0LmFzc2V0Q29udGFpbmVycy5tYWluLmFuY2hvckRpdi5maXJzdENoaWxkO1xuICAgIHRoaXMuZWxlbS5hZElmcmFtZSA9IHRoaXMuZWxlbS5hZENvbnRlbnQuZmlyc3RDaGlsZDtcbiAgICB0aGlzLmVsZW0uYWRCb2R5ID0gZG9jdW1lbnQgfHwgdGhpcy5lbGVtLmFkSWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQ7XG4gICAgLy8gdGhpcy5lbGVtLmFkQm9keSA9IGRvY3VtZW50O1xuICBcbiAgICB0aGlzLmRhdGEudXRpbHMgPSB0YXJnZXRXaW5kb3cuY29tLmFkdGVjaC5VdGlsc18kVkVSU0lPTiQ7XG4gICAgdGhpcy5kYXRhLmdsb2JhbEV2ZW50QnVzID0gdGFyZ2V0V2luZG93LmFkdGVjaEFkTWFuYWdlcl8kVkVSU0lPTiQuZ2xvYmFsRXZlbnRCdXM7XG4gICAgdGhpcy5kYXRhLnJpY2hNZWRpYUV2ZW50ID0gdGFyZ2V0V2luZG93LmNvbS5hZHRlY2guUmljaE1lZGlhRXZlbnRfJFZFUlNJT04kO1xuICAgIFxuICAgIHRoaXMuaW5pdFBsYXRmb3JtcygpO1xuICAgIHRoaXMuZGVmYXVsdExheW91dCgpO1xuICAgIHRoaXMuY2hlY2tSZWFkeSgpO1xuICBcbiAgICB0aGlzLmF0dGFjaExpc3RlbmVycygpO1xuICB9O1xuICBcbiAgLyoqXG4gICAqIEluaXRpYWxpc2UgcGxhdGZvcm0gY2xhc3Nlc1xuICAgKi9cbiAgY3VzdG9tQWQucHJvdG90eXBlLmluaXRQbGF0Zm9ybXMgPSBmdW5jdGlvbigpIHtcbiAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy5QbGF0Zm9ybXMpIHtcbiAgICAgIC8vIFByb3RvIHZhclxuICAgICAgdmFyIHByb3RvID0gdGhpcy5QbGF0Zm9ybXNba2V5XS5wcm90b3R5cGU7XG4gICAgICAvLyBBZGQgcGFyZW50IG9iamVjdCAoQ29yZSlcbiAgICAgIHByb3RvLnBhcmVudCA9IHRoaXM7XG4gICAgICAvLyBBZGQgZWxlbSBvYmpcbiAgICAgIHByb3RvLmVsZW0gPSB0aGlzLmVsZW07XG4gICAgICAvLyBBZGQgcmVzaXplIGRlZmF1bHRcbiAgICAgIHByb3RvLnJlc2l6ZSA9IHByb3RvLnJlc2l6ZSB8fCBmYWxzZTtcbiAgICAgIC8vIEFkZCBkYXRhIG9ianNcbiAgICAgIHByb3RvLmRhdGEgPSB0aGlzLmRhdGE7XG4gICAgICAvLyBBZGQgdG9vbHNcbiAgICAgIHByb3RvLnRvb2xzID0gdGhpcy50b29scztcbiAgICAgIC8vIFNldCByZWFkeSBkZWZhdWx0XG4gICAgICBwcm90by5yZWFkeSA9IHRydWU7XG4gICAgICAvLyBJbnN0YW50aWF0ZVxuICAgICAgdGhpcy5QbGF0Zm9ybVtrZXldID0gbmV3IHRoaXMuUGxhdGZvcm1zW2tleV0odGhpcy5hZHZlcnQpO1xuICAgIH1cbiAgfTtcbiAgXG4gIC8qKlxuICAgKiBDaGVjayByZWFkeVxuICAgKi9cbiAgY3VzdG9tQWQucHJvdG90eXBlLmNoZWNrUmVhZHkgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgIGZvciAodmFyIGtleSBpbiBzZWxmLlBsYXRmb3JtKSB7XG4gICAgICAgIGlmIChzZWxmLlBsYXRmb3JtW2tleV0ucmVhZHkgPT0gZmFsc2UpIHtcbiAgICAgICAgICBzZWxmLmNoZWNrUmVhZHkoKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzZWxmLnJlYWR5ID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sIDEwMCk7XG4gIH07XG4gIFxuICAvKipcbiAgICogRXZlbnQgZGlzcGF0Y2hlclxuICAgKi9cbiAgY3VzdG9tQWQucHJvdG90eXBlLmRpc3BhdGNoRXZlbnQgPSBmdW5jdGlvbihldmVudF9uYW1lLCBldmVudF9kYXRhKSB7XG4gICAgdmFyIHJpY2hNZWRpYUV2ZW50ID0gbmV3IHRoaXMuZGF0YS5yaWNoTWVkaWFFdmVudChldmVudF9uYW1lKTtcbiAgICByaWNoTWVkaWFFdmVudC5tZXRhID0gZXZlbnRfZGF0YTtcbiAgICB0aGlzLmFkdmVydC5ldmVudEJ1cy5kaXNwYXRjaEV2ZW50KHJpY2hNZWRpYUV2ZW50KTtcbiAgfVxuICBcbiAgLypcbiAgICogU2V0IGRlZmF1bHQgbGF5b3V0IGFuZCBkaW1lbnNpb25zXG4gICAqL1xuICBjdXN0b21BZC5wcm90b3R5cGUuZGVmYXVsdExheW91dCA9IGZ1bmN0aW9uKGFkdmVydCkge1xuICAgIHRoaXMuZWxlbS5hZENvbnRlbnQuc3R5bGUubGVmdCA9IDA7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBBdHRhY2ggbGlzdGVuZXJzXG4gICAqL1xuICBjdXN0b21BZC5wcm90b3R5cGUuYXR0YWNoTGlzdGVuZXJzID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICBcbiAgICAvLyBNYXNrXG4gICAgc2VsZi50b29scy5ldmVudHMuYWRkRXZlbnQoc2VsZi5hZHZlcnQuZXZlbnRCdXMsICdBRFRFQ0hfTUFTSycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIFxuICAgICAgdmFyIHQgPSBzZWxmLmNhbGN1bGF0ZShlLm1ldGEudCwgc2VsZi5lbGVtLmFkQ29udGFpbmVyLm9mZnNldEhlaWdodCk7XG4gICAgICB2YXIgciA9IHNlbGYuY2FsY3VsYXRlKGUubWV0YS5yLCBzZWxmLmVsZW0uYWRDb250YWluZXIub2Zmc2V0V2lkdGgpO1xuICAgICAgdmFyIGIgPSBzZWxmLmNhbGN1bGF0ZShlLm1ldGEuYiwgc2VsZi5lbGVtLmFkQ29udGFpbmVyLm9mZnNldEhlaWdodCk7XG4gICAgICB2YXIgbCA9IHNlbGYuY2FsY3VsYXRlKGUubWV0YS5sLCBzZWxmLmVsZW0uYWRDb250YWluZXIub2Zmc2V0V2lkdGgpO1xuICBcbiAgICAgIHNlbGYuZWxlbS5hZENvbnRhaW5lci5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XG4gICAgICBzZWxmLmVsZW0uYWRDb250YWluZXIuc3R5bGUub3ZlcmZsb3cgPSAnaGlkZGVuJztcbiAgICAgIHNlbGYuZWxlbS5hZENvbnRhaW5lci5zdHlsZS5jbGlwID0gJ3JlY3QoJyt0KydweCAnK3IrJ3B4ICcrYisncHggJytsKydweCknO1xuICAgIH0pO1xuICBcbiAgICAvLyBBZGQgd3JhcHBlciBhbmltYXRpb25cbiAgICBzZWxmLnRvb2xzLmV2ZW50cy5hZGRFdmVudChzZWxmLmFkdmVydC5ldmVudEJ1cywgJ0ZJUkVfQURURUNIX0FERF9XUkFQUEVSX0FOSU1BVElPTicsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgc2VsZi5lbGVtLmFkQ29udGFpbmVyLnN0eWxlLldlYmtpdFRyYW5zaXRpb24gPSAnYWxsIDAuMnMgZWFzZSc7XG4gICAgICAgIHNlbGYuZWxlbS5hZENvbnRhaW5lci5zdHlsZS5Nb3pUcmFuc2l0aW9uID0gJ2FsbCAwLjJzIGVhc2UnO1xuICAgIH0pO1xuICBcbiAgICAvLyBSZW1vdmUgd3JhcHBlciBhbmltYXRpb25cbiAgICBzZWxmLnRvb2xzLmV2ZW50cy5hZGRFdmVudChzZWxmLmFkdmVydC5ldmVudEJ1cywgJ0ZJUkVfQURURUNIX1JFTU9WRV9XUkFQUEVSX0FOSU1BVElPTicsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgc2VsZi5lbGVtLmFkQ29udGFpbmVyLnN0eWxlLldlYmtpdFRyYW5zaXRpb24gPSAnaW5oZXJpdCc7XG4gICAgICAgIHNlbGYuZWxlbS5hZENvbnRhaW5lci5zdHlsZS5Nb3pUcmFuc2l0aW9uID0gJ2luaGVyaXQnO1xuICAgIH0pO1xuICBcbiAgfTtcbiAgXG4gIC8qKlxuICAgKiBQZXJjZW50IG9yIHBpeGVsIHZhbHVlXG4gICAqL1xuICBjdXN0b21BZC5wcm90b3R5cGUucGVyY2VudE9yUGl4ZWxzID0gZnVuY3Rpb24odmFsKSB7XG4gICAgaWYgKHZhbC50b1N0cmluZygpLmluZGV4T2YoJyUnKSE9PS0xKSB7XG4gICAgICByZXR1cm4gJ3BlcmNlbnQnO1xuICAgIH0gZWxzZSBpZiAodmFsLnRvU3RyaW5nKCkuaW5kZXhPZigncHgnKSE9PS0xKSB7XG4gICAgICByZXR1cm4gJ3BpeGVscyc7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiAnaW50ZWdlcic7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBDYWxjdWxhdGVcbiAgICovXG4gIGN1c3RvbUFkLnByb3RvdHlwZS5jYWxjdWxhdGUgPSBmdW5jdGlvbih2YWwsIHNpemUpIHtcbiAgICB2YXIgdW5pdCA9IHRoaXMucGVyY2VudE9yUGl4ZWxzKHZhbCk7XG4gICAgc3dpdGNoICh1bml0KSB7XG4gICAgICBjYXNlICdpbnRlZ2VyJzpcbiAgICAgICAgdmFsID0gdmFsO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3BpeGVscyc6XG4gICAgICAgIHZhbCA9IHZhbC5yZXBsYWNlKCdweCcsICcnKTtcbiAgICAgICAgdmFsID0gdmFsO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3BlcmNlbnQnOlxuICAgICAgICB2YWwgPSB2YWwucmVwbGFjZSgnJScsICcnKTtcbiAgICAgICAgdmFsID0gKHZhbCAqIChzaXplLzEwMCkpO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHZhbCA9IGZhbHNlO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gICAgcmV0dXJuIHZhbCA9IHBhcnNlSW50KHZhbCwgMTApO1xuICB9XG5cbiAgdGFyZ2V0V2luZG93LmFkdGVjaENhbGxiYWNrSW5zdGFuY2VzID0gdGFyZ2V0V2luZG93LmFkdGVjaENhbGxiYWNrSW5zdGFuY2VzIHx8IFtdO1xuICB2YXIgaW5zdGFuY2VJbmRleCA9IHRhcmdldFdpbmRvdy5hZHRlY2hDYWxsYmFja0luc3RhbmNlcy5sZW5ndGg7XG4gIHRhcmdldFdpbmRvdy5hZHRlY2hDYWxsYmFja0luc3RhbmNlc1tpbnN0YW5jZUluZGV4XSA9IG5ldyB0YXJnZXRXaW5kb3cuY29tLmFkdGVjaC5BZHRlY2hDdXN0b21BZCRBRF9JRCQoKTtcblxuICB0YXJnZXRXaW5kb3cuYWR0ZWNoQWRDYWxsYmFja3MgPSB0YXJnZXRXaW5kb3cuYWR0ZWNoQWRDYWxsYmFja3MgfHwge307XG4gIHRhcmdldFdpbmRvdy5hZHRlY2hBZENhbGxiYWNrc1thZENvbmZpZy5hZFNlcnZlclZhcnMudWlkXSA9XG4gICAgICB0YXJnZXRXaW5kb3cuYWR0ZWNoQWRDYWxsYmFja3NbYWRDb25maWcuYWRTZXJ2ZXJWYXJzLnVpZF0gfHwgW107XG4gIHRhcmdldFdpbmRvdy5hZHRlY2hBZENhbGxiYWNrc1thZENvbmZpZy5hZFNlcnZlclZhcnMudWlkXS5wdXNoKFxuICAgICAgdGFyZ2V0V2luZG93LmFkdGVjaENhbGxiYWNrSW5zdGFuY2VzW2luc3RhbmNlSW5kZXhdKTtcbn0pKGFkdGVjaEFkQ29uZmlnKTsiXX0=
